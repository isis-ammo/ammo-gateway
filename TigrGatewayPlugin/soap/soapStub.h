/* soapStub.h
   Generated by gSOAP 2.7.17 from ContentService.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_WSA_2005
#define SOAP_NAMESPACE_OF_ns2	"http://www.ascendintel.com/tigr/v2/cs/types"
#define SOAP_NAMESPACE_OF_ns3	"http://www.ascendintel.com/tigr/v2"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_wsu__tTimestampFault
#define SOAP_TYPE_wsu__tTimestampFault (8)
/* wsu:tTimestampFault */
enum wsu__tTimestampFault {wsu__MessageExpired = 0};
typedef enum wsu__tTimestampFault wsu__tTimestampFault;
#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum
#define SOAP_TYPE_wsse__FaultcodeEnum (10)
/* wsse:FaultcodeEnum */
enum wsse__FaultcodeEnum {wsse__UnsupportedSecurityToken = 0, wsse__UnsupportedAlgorithm = 1, wsse__InvalidSecurity = 2, wsse__InvalidSecurityToken = 3, wsse__FailedAuthentication = 4, wsse__FailedCheck = 5, wsse__SecurityTokenUnavailable = 6};
typedef enum wsse__FaultcodeEnum wsse__FaultcodeEnum;
#endif

#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (70)
/* wsa5:RelationshipType */
enum wsa5__RelationshipType {http_x003a_x002f_x002fwww_x002ew3_x002eorg_x002f2005_x002f08_x002faddressing_x002freply = 0};
typedef enum wsa5__RelationshipType wsa5__RelationshipType;
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (71)
/* wsa5:FaultCodesType */
enum wsa5__FaultCodesType {wsa5__InvalidAddressingHeader = 0, wsa5__InvalidAddress = 1, wsa5__InvalidEPR = 2, wsa5__InvalidCardinality = 3, wsa5__MissingAddressInEPR = 4, wsa5__DuplicateMessageID = 5, wsa5__ActionMismatch = 6, wsa5__MessageAddressingHeaderRequired = 7, wsa5__DestinationUnreachable = 8, wsa5__ActionNotSupported = 9, wsa5__EndpointUnavailable = 10};
typedef enum wsa5__FaultCodesType wsa5__FaultCodesType;
#endif

#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (90)
/* wsa5:IsReferenceParameter */
enum _wsa5__IsReferenceParameter {wsa5__false = 0, wsa5__true = 1};
typedef enum _wsa5__IsReferenceParameter _wsa5__IsReferenceParameter;
#endif

#ifndef SOAP_TYPE_ns2__CardinalityType
#define SOAP_TYPE_ns2__CardinalityType (188)
/* ns2:CardinalityType */
enum ns2__CardinalityType {ns2__CardinalityType__ZeroOrOne = 0, ns2__CardinalityType__One = 1, ns2__CardinalityType__Many = 2};
#endif

#ifndef SOAP_TYPE_ns2__UnitValueType
#define SOAP_TYPE_ns2__UnitValueType (189)
/* ns2:UnitValueType */
enum ns2__UnitValueType {ns2__UnitValueType__Guid = 0, ns2__UnitValueType__Name = 1};
#endif

#ifndef SOAP_TYPE_ns2__CategoryValueType
#define SOAP_TYPE_ns2__CategoryValueType (190)
/* ns2:CategoryValueType */
enum ns2__CategoryValueType {ns2__CategoryValueType__Guid = 0, ns2__CategoryValueType__Name = 1};
#endif

#ifndef SOAP_TYPE_ns2__ClassificationType
#define SOAP_TYPE_ns2__ClassificationType (191)
/* ns2:ClassificationType */
enum ns2__ClassificationType {ns2__ClassificationType__CONFIDENTIAL = 0, ns2__ClassificationType__SECRET = 1, ns2__ClassificationType__UNCLASSIFIED = 2};
#endif

#ifndef SOAP_TYPE_ns2__ReleasabilityType
#define SOAP_TYPE_ns2__ReleasabilityType (192)
/* ns2:ReleasabilityType */
enum ns2__ReleasabilityType {ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020AFG = 0, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020AFG_x002c_x0020GCTF_x002c_x0020ISAF_x002c_x0020NATO = 1, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020AUS_x002c_x0020CAN_x002c_x0020GBR = 2, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020AUS_x002c_x0020CAN_x002c_x0020GBR_x002c_x0020NLD_x002c_x0020NZL = 3, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020GCTF_x002c_x0020ISAF_x002c_x0020NATO = 4, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020MCFI = 5, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020NATO = 6, ns2__ReleasabilityType__NONE = 7, ns2__ReleasabilityType__FOR_x0020OFFICIAL_x0020USE_x0020ONLY = 8, ns2__ReleasabilityType__REL_x0020TO_x0020USA_x002c_x0020ISAF_x002c_x0020NATO = 9, ns2__ReleasabilityType__NOFORN = 10};
#endif

#ifndef SOAP_TYPE_ns2__OperationalStatusType
#define SOAP_TYPE_ns2__OperationalStatusType (193)
/* ns2:OperationalStatusType */
enum ns2__OperationalStatusType {ns2__OperationalStatusType__Operational = 0, ns2__OperationalStatusType__Marginally_x0020operational = 1, ns2__OperationalStatusType__Not_x0020operational = 2, ns2__OperationalStatusType__Substantially_x0020operational = 3, ns2__OperationalStatusType__Temporarily_x0020not_x0020operational = 4, ns2__OperationalStatusType__Not_x0020known = 5};
#endif

#ifndef SOAP_TYPE_ns2__OperationalStatus2Type
#define SOAP_TYPE_ns2__OperationalStatus2Type (194)
/* ns2:OperationalStatus2Type */
enum ns2__OperationalStatus2Type {ns2__OperationalStatus2Type__Destroyed = 0, ns2__OperationalStatus2Type__Heavily_x0020Damaged = 1, ns2__OperationalStatus2Type__Lacking_x0020vital_x0020resources = 2, ns2__OperationalStatus2Type__Lightly_x0020damaged = 3, ns2__OperationalStatus2Type__Lost = 4, ns2__OperationalStatus2Type__Moderately_x0020damaged = 5, ns2__OperationalStatus2Type__Not_x0020known = 6};
#endif

#ifndef SOAP_TYPE_ns2__YesNoType
#define SOAP_TYPE_ns2__YesNoType (195)
/* ns2:YesNoType */
enum ns2__YesNoType {ns2__YesNoType__Yes = 0, ns2__YesNoType__No = 1};
#endif

#ifndef SOAP_TYPE_ns2__GenderType
#define SOAP_TYPE_ns2__GenderType (196)
/* ns2:GenderType */
enum ns2__GenderType {ns2__GenderType__Male = 0, ns2__GenderType__Female = 1};
#endif

#ifndef SOAP_TYPE_ns2__PeopleTypeType
#define SOAP_TYPE_ns2__PeopleTypeType (197)
/* ns2:PeopleTypeType */
enum ns2__PeopleTypeType {ns2__PeopleTypeType__Civilian = 0, ns2__PeopleTypeType__Military = 1, ns2__PeopleTypeType__Paramilitary = 2, ns2__PeopleTypeType__Not_x0020known = 3, ns2__PeopleTypeType__Not_x0020otherwise_x0020specified = 4};
#endif

#ifndef SOAP_TYPE_ns2__PeopleType2Type
#define SOAP_TYPE_ns2__PeopleType2Type (198)
/* ns2:PeopleType2Type */
enum ns2__PeopleType2Type {ns2__PeopleType2Type__Defector = 0, ns2__PeopleType2Type__Deserter = 1, ns2__PeopleType2Type__Detainee = 2, ns2__PeopleType2Type__Displaced_x0020person = 3, ns2__PeopleType2Type__Engineer = 4, ns2__PeopleType2Type__Government_x0020employee = 5, ns2__PeopleType2Type__Intellectual = 6, ns2__PeopleType2Type__Journalist = 7, ns2__PeopleType2Type__Landowner = 8, ns2__PeopleType2Type__Media_x002c_x0020international = 9, ns2__PeopleType2Type__Media_x002c_x0020local = 10, ns2__PeopleType2Type__Media_x002c_x0020national = 11, ns2__PeopleType2Type__Media_x002c_x0020not_x0020otherwise_x0020specified = 12, ns2__PeopleType2Type__Medical = 13, ns2__PeopleType2Type__Merchant = 14, ns2__PeopleType2Type__Messenger = 15, ns2__PeopleType2Type__Missionary = 16, ns2__PeopleType2Type__Non_government_x0020eployee = 17, ns2__PeopleType2Type__Pararescue_x0020jumper = 18, ns2__PeopleType2Type__Partisan = 19, ns2__PeopleType2Type__Pilot = 20, ns2__PeopleType2Type__Police_x0020chief = 21, ns2__PeopleType2Type__Policeman = 22, ns2__PeopleType2Type__Prisoner = 23, ns2__PeopleType2Type__Prisoner_x0020of_x0020war = 24, ns2__PeopleType2Type__Refugee = 25, ns2__PeopleType2Type__Repatriate = 26, ns2__PeopleType2Type__Saboteur = 27, ns2__PeopleType2Type__Spy = 28, ns2__PeopleType2Type__Terrorist = 29, ns2__PeopleType2Type__Unlawful_x0020combatant = 30, ns2__PeopleType2Type__Village_x0020elder = 31, ns2__PeopleType2Type__Writer = 32, ns2__PeopleType2Type__Not_x0020known = 33, ns2__PeopleType2Type__Not_x0020otherwise_x0020specified = 34};
#endif

#ifndef SOAP_TYPE_ns2__RankType
#define SOAP_TYPE_ns2__RankType (199)
/* ns2:RankType */
enum ns2__RankType {ns2__RankType__Enlisted_x0020private = 0, ns2__RankType__NCO_x002c_x0020not_x0020otherwise_x0020specified = 1, ns2__RankType__OF_1 = 2, ns2__RankType__OF_10 = 3, ns2__RankType__OF_2 = 4, ns2__RankType__OF_3 = 5, ns2__RankType__OF_4 = 6, ns2__RankType__OF_5 = 7, ns2__RankType__OF_6 = 8, ns2__RankType__OF_7 = 9, ns2__RankType__OF_8 = 10, ns2__RankType__OF_9 = 11, ns2__RankType__Officer_x002c_x0020not_x0020otherwise_x0020specified = 12, ns2__RankType__OR_1 = 13, ns2__RankType__OR_2 = 14, ns2__RankType__OR_3 = 15, ns2__RankType__OR_4 = 16, ns2__RankType__OR_5 = 17, ns2__RankType__OR_6 = 18, ns2__RankType__OR_7 = 19, ns2__RankType__OR_8 = 20, ns2__RankType__OR_9 = 21, ns2__RankType__Other_x0020ranks = 22, ns2__RankType__Not_x0020known = 23};
#endif

#ifndef SOAP_TYPE_ns2__DutyStatusType
#define SOAP_TYPE_ns2__DutyStatusType (200)
/* ns2:DutyStatusType */
enum ns2__DutyStatusType {ns2__DutyStatusType__Absent = 0, ns2__DutyStatusType__Arrested = 1, ns2__DutyStatusType__Assumed_x0020killed_x0020in_x0020action = 2, ns2__DutyStatusType__At_x0020duty = 3, ns2__DutyStatusType__Deceased = 4, ns2__DutyStatusType__Deserted = 5, ns2__DutyStatusType__Hospitalized = 6, ns2__DutyStatusType__Hostage = 7, ns2__DutyStatusType__Missing = 8, ns2__DutyStatusType__On_x0020leave = 9, ns2__DutyStatusType__Prisoner_x0020of_x0020war = 10, ns2__DutyStatusType__Not_x0020known = 11};
#endif

#ifndef SOAP_TYPE_ns2__PhysicalStatusType
#define SOAP_TYPE_ns2__PhysicalStatusType (201)
/* ns2:PhysicalStatusType */
enum ns2__PhysicalStatusType {ns2__PhysicalStatusType__Fit = 0, ns2__PhysicalStatusType__Incapacitated_x002c_x0020not_x0020walking = 1, ns2__PhysicalStatusType__Incapacitated_x002c_x0020walking = 2, ns2__PhysicalStatusType__SI = 3, ns2__PhysicalStatusType__Not_x0020known = 4};
#endif

#ifndef SOAP_TYPE_ns2__PhysicalStatus2Type
#define SOAP_TYPE_ns2__PhysicalStatus2Type (202)
/* ns2:PhysicalStatus2Type */
enum ns2__PhysicalStatus2Type {ns2__PhysicalStatus2Type__Ill_x002c_x0020contagious = 0, ns2__PhysicalStatus2Type__Ill_x002c_x0020non_contagious = 1, ns2__PhysicalStatus2Type__Ill_x002c_x0020unknown_x0020disease = 2, ns2__PhysicalStatus2Type__Injured = 3, ns2__PhysicalStatus2Type__Pregnant = 4, ns2__PhysicalStatus2Type__Wounded = 5, ns2__PhysicalStatus2Type__Not_x0020known = 6};
#endif

#ifndef SOAP_TYPE_ns2__PoliticalStanceType
#define SOAP_TYPE_ns2__PoliticalStanceType (203)
/* ns2:PoliticalStanceType */
enum ns2__PoliticalStanceType {ns2__PoliticalStanceType__Neutral = 0, ns2__PoliticalStanceType__Anti_Coalition = 1, ns2__PoliticalStanceType__Anti_Government = 2, ns2__PoliticalStanceType__Pro_Coalition = 3, ns2__PoliticalStanceType__Pro_Government = 4};
#endif

#ifndef SOAP_TYPE_ns2__EyeColorType
#define SOAP_TYPE_ns2__EyeColorType (204)
/* ns2:EyeColorType */
enum ns2__EyeColorType {ns2__EyeColorType__Brown = 0, ns2__EyeColorType__Blue = 1, ns2__EyeColorType__Green = 2};
#endif

#ifndef SOAP_TYPE_ns2__HairColorType
#define SOAP_TYPE_ns2__HairColorType (205)
/* ns2:HairColorType */
enum ns2__HairColorType {ns2__HairColorType__Black = 0, ns2__HairColorType__Blond = 1, ns2__HairColorType__Brown = 2, ns2__HairColorType__Red = 3};
#endif

#ifndef SOAP_TYPE_ns2__BuildType
#define SOAP_TYPE_ns2__BuildType (206)
/* ns2:BuildType */
enum ns2__BuildType {ns2__BuildType__Athletic = 0};
#endif

#ifndef SOAP_TYPE_ns2__MannerOfDressType
#define SOAP_TYPE_ns2__MannerOfDressType (207)
/* ns2:MannerOfDressType */
enum ns2__MannerOfDressType {ns2__MannerOfDressType__Arab = 0, ns2__MannerOfDressType__Western = 1};
#endif

#ifndef SOAP_TYPE_ns2__WritingHandType
#define SOAP_TYPE_ns2__WritingHandType (208)
/* ns2:WritingHandType */
enum ns2__WritingHandType {ns2__WritingHandType__Left = 0, ns2__WritingHandType__Right = 1, ns2__WritingHandType__None = 2};
#endif

#ifndef SOAP_TYPE_ns2__RoleType
#define SOAP_TYPE_ns2__RoleType (209)
/* ns2:RoleType */
enum ns2__RoleType {ns2__RoleType__Facilitator = 0, ns2__RoleType__Financier = 1, ns2__RoleType__Insurgent_x0020Leader = 2, ns2__RoleType__Insurgent_x0020Operative = 3, ns2__RoleType__Military = 4, ns2__RoleType__Military_x0020Leader = 5, ns2__RoleType__National_x0020Government = 6, ns2__RoleType__Police = 7, ns2__RoleType__Provincial_x0020Leader = 8};
#endif

#ifndef SOAP_TYPE_ns2__JustificationType
#define SOAP_TYPE_ns2__JustificationType (210)
/* ns2:JustificationType */
enum ns2__JustificationType {ns2__JustificationType__Command_x0020Request = 0, ns2__JustificationType__Team_x0020Initiated = 1};
#endif

#ifndef SOAP_TYPE_ns2__CountryType
#define SOAP_TYPE_ns2__CountryType (211)
/* ns2:CountryType */
enum ns2__CountryType {ns2__CountryType__Afghanistan = 0, ns2__CountryType__Iraq = 1, ns2__CountryType__Dijibouti = 2, ns2__CountryType__Ethiopia = 3, ns2__CountryType__Somalia = 4};
#endif

#ifndef SOAP_TYPE_ns2__AfghanistanProvinceType
#define SOAP_TYPE_ns2__AfghanistanProvinceType (212)
/* ns2:AfghanistanProvinceType */
enum ns2__AfghanistanProvinceType {ns2__AfghanistanProvinceType__Badakhshan = 0, ns2__AfghanistanProvinceType__Badghis = 1, ns2__AfghanistanProvinceType__Baghlan = 2, ns2__AfghanistanProvinceType__Balkh = 3, ns2__AfghanistanProvinceType__Bamian = 4, ns2__AfghanistanProvinceType__Daikondi = 5, ns2__AfghanistanProvinceType__Farah = 6, ns2__AfghanistanProvinceType__Faryab = 7, ns2__AfghanistanProvinceType__Ghazni = 8, ns2__AfghanistanProvinceType__Ghowr = 9, ns2__AfghanistanProvinceType__Helmand = 10, ns2__AfghanistanProvinceType__Herat = 11, ns2__AfghanistanProvinceType__Jowzjan = 12, ns2__AfghanistanProvinceType__Kabul = 13, ns2__AfghanistanProvinceType__Kandahar = 14, ns2__AfghanistanProvinceType__Kapisa = 15, ns2__AfghanistanProvinceType__Khost = 16, ns2__AfghanistanProvinceType__Konar = 17, ns2__AfghanistanProvinceType__Kunduz = 18, ns2__AfghanistanProvinceType__Laghman = 19, ns2__AfghanistanProvinceType__Lowgar = 20, ns2__AfghanistanProvinceType__Nangarhar = 21, ns2__AfghanistanProvinceType__Nimruz = 22, ns2__AfghanistanProvinceType__Zaranj = 23, ns2__AfghanistanProvinceType__Nuristan = 24, ns2__AfghanistanProvinceType__Panjshir = 25, ns2__AfghanistanProvinceType__Paktia = 26, ns2__AfghanistanProvinceType__Parwan = 27, ns2__AfghanistanProvinceType__Samangan = 28, ns2__AfghanistanProvinceType__Sar_iPol = 29, ns2__AfghanistanProvinceType__Takhar = 30, ns2__AfghanistanProvinceType__Uruzgan = 31, ns2__AfghanistanProvinceType__Wardak = 32, ns2__AfghanistanProvinceType__Zabol = 33};
#endif

#ifndef SOAP_TYPE_ns2__IraqProvinceType
#define SOAP_TYPE_ns2__IraqProvinceType (213)
/* ns2:IraqProvinceType */
enum ns2__IraqProvinceType {ns2__IraqProvinceType__Baghdad = 0, ns2__IraqProvinceType__Salah_x0020ad_x0020Din = 1, ns2__IraqProvinceType__Diyala = 2, ns2__IraqProvinceType__Wasit = 3, ns2__IraqProvinceType__Maysan = 4, ns2__IraqProvinceType__Al_x0020Basrah = 5, ns2__IraqProvinceType__Dhi_x0020Qar = 6, ns2__IraqProvinceType__Al_x0020Muthanna = 7, ns2__IraqProvinceType__Al_Q_x00c4_x0081disiyyah = 8, ns2__IraqProvinceType__Babil = 9, ns2__IraqProvinceType__Karbala = 10, ns2__IraqProvinceType__An_x0020Najaf = 11, ns2__IraqProvinceType__Al_x0020Anbar = 12, ns2__IraqProvinceType__Ninawa = 13, ns2__IraqProvinceType__Dahuk = 14, ns2__IraqProvinceType__Arbil = 15, ns2__IraqProvinceType__Kirkuk = 16, ns2__IraqProvinceType__Sulaymaniyah = 17};
#endif

#ifndef SOAP_TYPE_ns2__EritreaProvinceType
#define SOAP_TYPE_ns2__EritreaProvinceType (214)
/* ns2:EritreaProvinceType */
enum ns2__EritreaProvinceType {ns2__EritreaProvinceType__Central = 0, ns2__EritreaProvinceType__Southern = 1, ns2__EritreaProvinceType__Gash_Barka = 2, ns2__EritreaProvinceType__Anseba = 3, ns2__EritreaProvinceType__Northern_x0020Red_x0020Sea = 4, ns2__EritreaProvinceType__Southern_x0020Red_x0020Sea = 5};
#endif

#ifndef SOAP_TYPE_ns2__DijiboutiProvinceType
#define SOAP_TYPE_ns2__DijiboutiProvinceType (215)
/* ns2:DijiboutiProvinceType */
enum ns2__DijiboutiProvinceType {ns2__DijiboutiProvinceType__Ali_x0020Sabieh_x0020Region = 0, ns2__DijiboutiProvinceType__Arta_x0020Region = 1, ns2__DijiboutiProvinceType__Dikhil = 2, ns2__DijiboutiProvinceType__Djibouti = 3, ns2__DijiboutiProvinceType__Obock_x0020Region = 4, ns2__DijiboutiProvinceType__Tadjourah_x0020Region = 5};
#endif

#ifndef SOAP_TYPE_ns2__EthiopiaProvinceType
#define SOAP_TYPE_ns2__EthiopiaProvinceType (216)
/* ns2:EthiopiaProvinceType */
enum ns2__EthiopiaProvinceType {ns2__EthiopiaProvinceType__Addis_x0020Ababa = 0, ns2__EthiopiaProvinceType__Afar = 1, ns2__EthiopiaProvinceType__Amhara = 2, ns2__EthiopiaProvinceType__Benishangul_Gumuz = 3, ns2__EthiopiaProvinceType__Dire_x0020Dawa = 4, ns2__EthiopiaProvinceType__Gambela = 5, ns2__EthiopiaProvinceType__Harari = 6, ns2__EthiopiaProvinceType__Oromia = 7, ns2__EthiopiaProvinceType__Somali = 8, ns2__EthiopiaProvinceType__Tigray = 9};
#endif

#ifndef SOAP_TYPE_ns2__SomaliaProvinceType
#define SOAP_TYPE_ns2__SomaliaProvinceType (217)
/* ns2:SomaliaProvinceType */
enum ns2__SomaliaProvinceType {ns2__SomaliaProvinceType__Galmudug = 0, ns2__SomaliaProvinceType__Islamic_x0020Courts_x0020Union = 1, ns2__SomaliaProvinceType__Jubaland = 2, ns2__SomaliaProvinceType__Maakhir = 3, ns2__SomaliaProvinceType__Northland_x0020State = 4, ns2__SomaliaProvinceType__Puntland = 5, ns2__SomaliaProvinceType__Somalia = 6, ns2__SomaliaProvinceType__Somaliland = 7, ns2__SomaliaProvinceType__Southwestern_x0020Somalia = 8};
#endif

#ifndef SOAP_TYPE_ns2__ProductType
#define SOAP_TYPE_ns2__ProductType (218)
/* ns2:ProductType */
enum ns2__ProductType {ns2__ProductType__Effects_x0020Assessment = 0, ns2__ProductType__Research_x0020and_x0020Analysis_x0020Process_x0020Assessment = 1, ns2__ProductType__Research_x0020Plan = 2, ns2__ProductType__Research_x0020Project_x0020Design = 3, ns2__ProductType__Raw_x0020Material = 4, ns2__ProductType__Intermediate_x0020Material = 5, ns2__ProductType__Finished_x0020Product = 6};
#endif

#ifndef SOAP_TYPE_ns2__DataCollectionMethodType
#define SOAP_TYPE_ns2__DataCollectionMethodType (219)
/* ns2:DataCollectionMethodType */
enum ns2__DataCollectionMethodType {ns2__DataCollectionMethodType__Secondary_x0020Source = 0, ns2__DataCollectionMethodType__Direct_x0020Observation = 1, ns2__DataCollectionMethodType__Visual_x0020Ethnography = 2, ns2__DataCollectionMethodType__Key_x0020Leader_x0020Engagement = 3, ns2__DataCollectionMethodType__Participant_x0020Observation = 4, ns2__DataCollectionMethodType__Depth_x0020Interviews = 5, ns2__DataCollectionMethodType__Group_x0020Interviews_x002fFocus_x0020Groups = 6, ns2__DataCollectionMethodType__Surveys = 7, ns2__DataCollectionMethodType__Mixed_x0020Method_x0020Approaches = 8};
#endif

#ifndef SOAP_TYPE_ns2__AnalyticalToolMethodType
#define SOAP_TYPE_ns2__AnalyticalToolMethodType (220)
/* ns2:AnalyticalToolMethodType */
enum ns2__AnalyticalToolMethodType {ns2__AnalyticalToolMethodType__Cultural_x0020Domain_x0020Analysis = 0, ns2__AnalyticalToolMethodType__Text_x0020Analysis = 1, ns2__AnalyticalToolMethodType__Structural_x0020Analysis = 2, ns2__AnalyticalToolMethodType__Quantitative_x0020Analysis = 3, ns2__AnalyticalToolMethodType__Inference_x002fProbable_x0020Cause_x0020Analysis = 4};
#endif

#ifndef SOAP_TYPE_ns2__KeywordType
#define SOAP_TYPE_ns2__KeywordType (221)
/* ns2:KeywordType */
enum ns2__KeywordType {ns2__KeywordType__Key_x0020Leaders = 0, ns2__KeywordType__Geography = 1, ns2__KeywordType__Geography_x005cPhysical_x0020Geography = 2, ns2__KeywordType__Geography_x005cHuman_x0020Geography = 3, ns2__KeywordType__Geography_x005cHuman_x0020Geography_x005cSettlement_x0020Geography = 4, ns2__KeywordType__Geography_x005cHuman_x0020Geography_x005cMigration_x0020Patterns = 5, ns2__KeywordType__Green_x0020Significant_x0020Activities = 6, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cBlue_x0020on_x0020Green = 7, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cRed_x0020on_x0020Green = 8, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green = 9, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cConflict = 10, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cCrime = 11, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cCrime_x005cEconomic = 12, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cCrime_x005cEconomic_x005cBlack_x0020Market = 13, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cCrime_x005cEconomic_x005cSmuggling = 14, ns2__KeywordType__Green_x0020Significant_x0020Activities_x005cGreen_x0020on_x0020Green_x005cCrime_x005cEconomic_x005cCorruption = 15, ns2__KeywordType__Political_x0020System = 16, ns2__KeywordType__Political_x0020System_x005cParties = 17, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions = 18, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions_x005cExecutive = 19, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions_x005cExecutive_x005cMinistry_x002fDepartment = 20, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions_x005cDeliberative = 21, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions_x005cDeliberative_x005cLawmaking = 22, ns2__KeywordType__Political_x0020System_x005cParties_x005cInstitutions_x005cDeliberative_x005cAdjudicative = 23, ns2__KeywordType__Political_x0020System_x005cParties_x005cNon_state_x0020Actors = 24, ns2__KeywordType__Political_x0020System_x005cParties_x005cNon_state_x0020Actors_x005cNGOs = 25, ns2__KeywordType__Political_x0020System_x005cParties_x005cNon_state_x0020Actors_x005cInterest_x0020Group = 26, ns2__KeywordType__Political_x0020System_x005cParties_x005cLegal_x0020System = 27, ns2__KeywordType__Political_x0020System_x005cParties_x005cLegal_x0020System_x005cLaws = 28, ns2__KeywordType__Political_x0020System_x005cParties_x005cLegal_x0020System_x005cPolicies = 29, ns2__KeywordType__Political_x0020System_x005cParties_x005cLegal_x0020System_x005cSanction = 30, ns2__KeywordType__Political_x0020System_x005cParties_x005cLegal_x0020System_x005cConflict_x0020Resolution = 31, ns2__KeywordType__Economics = 32, ns2__KeywordType__Economics_x005cIndicators = 33, ns2__KeywordType__Economics_x005cIndicators_x005cNatural_x0020Resources = 34, ns2__KeywordType__Economics_x005cIndicators_x005cNatural_x0020Resources_x005cLand = 35, ns2__KeywordType__Economics_x005cIndicators_x005cNatural_x0020Resources_x005cWater = 36, ns2__KeywordType__Economics_x005cIndicators_x005cNatural_x0020Resources_x005cVegetation = 37, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle = 38, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction = 39, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors = 40, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors_x005cAgriculture = 41, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors_x005cMining_x002fExtraction = 42, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors_x005cManufacturing = 43, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors_x005cServices = 44, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cSectors_x005cFinance_x002fExchange = 45, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cLabor = 46, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cLabor_x005cWages = 47, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cLabor_x005cEmployment = 48, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cProduction_x005cLabor_x005cGender_x0020Division = 49, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution = 50, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution_x005cPorts = 51, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution_x005cWarehousing = 52, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution_x005cMarketplaces_x002fRetail = 53, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution_x005cRoads_x0020and_x0020Rails = 54, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cDistribution_x005cWaterways = 55, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cConsumption = 56, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cConsumption_x005cHousehold_x0020Economy = 57, ns2__KeywordType__Economics_x005cIndicators_x005cEconomic_x0020Cycle_x005cConsumption_x005cCommodities_x0020Pricing = 58, ns2__KeywordType__Society = 59, ns2__KeywordType__Society_x005cSocial_x0020Structure = 60, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cReligous_x0020Groups = 61, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cTribal_x0020System = 62, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cDescent_x0020Group = 63, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cFamily_x002fHousehold = 64, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cEthnic_x0020Group = 65, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cSocio_economic_x0020Class = 66, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cInformal_x0020Networks = 67, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cCaste = 68, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cGender_x0020Group = 69, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cTrade_x002fEconomic_x0020Group = 70, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cMilitia_x002fArmed_x0020Group = 71, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cRegional_x002fLocal_x0020Community = 72, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cAge_x0020Grade = 73, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cNational_x0020Identity_x0020Group = 74, ns2__KeywordType__Society_x005cSocial_x0020Structure_x005cRefugees_x002fIDPs = 75, ns2__KeywordType__Society_x005cCulture = 76, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems = 77, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cIdeology = 78, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cReligion = 79, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cEthical_x0020Codes = 80, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cValues = 81, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cIdentity_x0020_x0028Collective_x0020and_x0020Individual_x0029 = 82, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cEducation_x0020_x0028Social_x0020Learning_x002fEnculturation_x0029 = 83, ns2__KeywordType__Society_x005cCulture_x005cBelief_x0020Systems_x005cHealth_x002fWell_being_x0020_x0028Local_x0020Perception_x0020and_x0020Understanding_x0029 = 84, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms = 85, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cSymbols = 86, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cNarratives = 87, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cThe_x0020Arts = 88, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cTraditions = 89, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cHolidays_x002fObservance = 90, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cNorm = 91, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cStatus_x0020and_x0020Role = 92, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cApparel = 93, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cHousing = 94, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cRecreation_x005cLeisure_x005cSports = 95, ns2__KeywordType__Society_x005cCulture_x005cCultural_x0020Forms_x005cRecreation_x005cLeisure_x005couth_x0020Activities = 96, ns2__KeywordType__Society_x005cCommunications = 97, ns2__KeywordType__Society_x005cCommunications_x005cLanguage = 98, ns2__KeywordType__Society_x005cCommunications_x005cNon_verbal = 99, ns2__KeywordType__Interests = 100, ns2__KeywordType__Interests_x005cPolitical = 101, ns2__KeywordType__Interests_x005cSocial = 102, ns2__KeywordType__Interests_x005cEconomic = 103, ns2__KeywordType__Interests_x005cResource = 104, ns2__KeywordType__Interests_x005cTerritorial = 105, ns2__KeywordType__Interests_x005cSecurity_x002fSafety = 106, ns2__KeywordType__Grievances = 107, ns2__KeywordType__Grievances_x005cPolitical = 108, ns2__KeywordType__Grievances_x005cSocial = 109, ns2__KeywordType__Grievances_x005cEconomic = 110, ns2__KeywordType__Grievances_x005cResource = 111, ns2__KeywordType__Power = 112, ns2__KeywordType__Power_x005cCoercion = 113, ns2__KeywordType__Power_x005cEconomic = 114, ns2__KeywordType__Power_x005cSocial_x0020Capital_x0020_x0028Trust_x0029 = 115, ns2__KeywordType__Power_x005cAuthority_x0020_x0028Patronage_x0020Networks_x0029 = 116, ns2__KeywordType__Information_x0020Environment = 117, ns2__KeywordType__Information_x0020Environment_x005cSource = 118, ns2__KeywordType__Information_x0020Environment_x005cContent = 119, ns2__KeywordType__Information_x0020Environment_x005cMeans_x0020of_x0020Delivery = 120, ns2__KeywordType__Capabilities = 121, ns2__KeywordType__Capabilities_x005cPublic_x0020Safety = 122, ns2__KeywordType__Capabilities_x005cPublic_x0020Safety_x005cMilitary = 123, ns2__KeywordType__Capabilities_x005cPublic_x0020Safety_x005cBorder = 124, ns2__KeywordType__Capabilities_x005cPublic_x0020Safety_x005cPolice = 125, ns2__KeywordType__Capabilities_x005cPublic_x0020Safety_x005cIntelligence_x0020Organizations = 126, ns2__KeywordType__Capabilities_x005cPublic_x0020Health = 127, ns2__KeywordType__Capabilities_x005cPublic_x0020Health_x005cClinics = 128, ns2__KeywordType__Capabilities_x005cPublic_x0020Health_x005cHospitals = 129, ns2__KeywordType__Capabilities_x005cPublic_x0020Health_x005cVeterinary = 130, ns2__KeywordType__Capabilities_x005cFood = 131, ns2__KeywordType__Capabilities_x005cWater = 132, ns2__KeywordType__Capabilities_x005cWater_x005cIrrigation = 133, ns2__KeywordType__Capabilities_x005cWater_x005cWell_x002fAqueducts = 134, ns2__KeywordType__Capabilities_x005cSanitation = 135, ns2__KeywordType__Capabilities_x005cSanitation_x005cSewage = 136, ns2__KeywordType__Capabilities_x005cSanitation_x005cTrash = 137, ns2__KeywordType__Capabilities_x005cTransportation = 138, ns2__KeywordType__Capabilities_x005cEnergy = 139, ns2__KeywordType__Capabilities_x005cEnergy_x005cElectricity = 140, ns2__KeywordType__Capabilities_x005cEducation = 141, ns2__KeywordType__Capabilities_x005cEducation_x005cLiteracy = 142, ns2__KeywordType__Capabilities_x005cEducation_x005cSchools = 143};
#endif

#ifndef SOAP_TYPE_ns2__MissionType
#define SOAP_TYPE_ns2__MissionType (222)
/* ns2:MissionType */
enum ns2__MissionType {ns2__MissionType__Key_x0020Leader_x0020Engagements = 0, ns2__MissionType__Assessment = 1, ns2__MissionType__Assessment_x005cDistrict = 2, ns2__MissionType__Assessment_x005cVillage = 3, ns2__MissionType__Assessment_x005cInfrastructure_x0020_x0028QA_x002fQC_x0029 = 4, ns2__MissionType__Ceremonial = 5, ns2__MissionType__Meeting = 6, ns2__MissionType__Meeting_x005cCoordination = 7, ns2__MissionType__Meeting_x005cShura = 8, ns2__MissionType__Meeting_x005cInformation_x0020Only_x002fAttendee = 9, ns2__MissionType__HA = 10, ns2__MissionType__HA_x002fMEDCAP_x002fVETCAP = 11, ns2__MissionType__MCIDNE_USCORECMO = 12, ns2__MissionType__Other = 13};
#endif

#ifndef SOAP_TYPE_ns2__LineOfOperationType
#define SOAP_TYPE_ns2__LineOfOperationType (223)
/* ns2:LineOfOperationType */
enum ns2__LineOfOperationType {ns2__LineOfOperationType__Governance = 0, ns2__LineOfOperationType__Development = 1, ns2__LineOfOperationType__Security = 2, ns2__LineOfOperationType__IO = 3};
#endif

#ifndef SOAP_TYPE_ns2__MinistryType
#define SOAP_TYPE_ns2__MinistryType (224)
/* ns2:MinistryType */
enum ns2__MinistryType {ns2__MinistryType__Governor = 0, ns2__MinistryType__Foreign_x0020Affairs = 1, ns2__MinistryType__Interior = 2, ns2__MinistryType__Finance = 3, ns2__MinistryType__Culture_x0020and_x0020Youth = 4, ns2__MinistryType__Commerce = 5, ns2__MinistryType__Water_x0020and_x0020Energy = 6, ns2__MinistryType__Transport = 7, ns2__MinistryType__Womens_x0020Affairs = 8, ns2__MinistryType__Hajj_x0020and_x0020Islamic_x0020Affairs = 9, ns2__MinistryType__Public_x0020Welfare = 10, ns2__MinistryType__Public_x0020Health = 11, ns2__MinistryType__Agriculture = 12, ns2__MinistryType__Mines = 13, ns2__MinistryType__Communication = 14, ns2__MinistryType__MRRD = 15, ns2__MinistryType__Work_x002c_x0020Social_x0020Affairs_x002c_x0020Martyred = 16, ns2__MinistryType__Borders_x0020and_x0020Tribal_x0020Affairs = 17, ns2__MinistryType__Urban_x0020Development = 18, ns2__MinistryType__Anti_Narcotics = 19, ns2__MinistryType__Refugees = 20};
#endif

#ifndef SOAP_TYPE_ns2__OccupationStatusType
#define SOAP_TYPE_ns2__OccupationStatusType (225)
/* ns2:OccupationStatusType */
enum ns2__OccupationStatusType {ns2__OccupationStatusType__Breached = 0, ns2__OccupationStatusType__Burned_x0020out = 1, ns2__OccupationStatusType__Covered_x0020by_x0020fire = 2, ns2__OccupationStatusType__Denied = 3, ns2__OccupationStatusType__Destroyed = 4, ns2__OccupationStatusType__Disassembled = 5, ns2__OccupationStatusType__Heavily_x0020Damaged = 6, ns2__OccupationStatusType__In_x0020maintenance = 7, ns2__OccupationStatusType__Lacking_x0020vital_x0020resources = 8, ns2__OccupationStatusType__Lightly_x0020damaged = 9, ns2__OccupationStatusType__Lost_x002fCaptured = 10, ns2__OccupationStatusType__Marked = 11, ns2__OccupationStatusType__Moderately_x0020damaged = 12, ns2__OccupationStatusType__Partly_x0020Dismantled = 13, ns2__OccupationStatusType__Passable = 14, ns2__OccupationStatusType__Under_x0020construction = 15, ns2__OccupationStatusType__Not_x0020known = 16};
#endif

#ifndef SOAP_TYPE_ns2__ConstructionType
#define SOAP_TYPE_ns2__ConstructionType (226)
/* ns2:ConstructionType */
enum ns2__ConstructionType {ns2__ConstructionType__Asphalt = 0, ns2__ConstructionType__Bitumen = 1, ns2__ConstructionType__Brick_x002fMasonry = 2, ns2__ConstructionType__Clay = 3, ns2__ConstructionType__Cobblestone = 4, ns2__ConstructionType__Composite_x002c_x0020permanent = 5, ns2__ConstructionType__Composite_x002c_x0020soft = 6, ns2__ConstructionType__Concrete = 7, ns2__ConstructionType__Concrete_x0020Block = 8, ns2__ConstructionType__Coral = 9, ns2__ConstructionType__Earth = 10, ns2__ConstructionType__Gravel = 11, ns2__ConstructionType__Ice = 12, ns2__ConstructionType__Laterite = 13, ns2__ConstructionType__Macadam = 14, ns2__ConstructionType__Membrane = 15, ns2__ConstructionType__Metal = 16, ns2__ConstructionType__Mix = 17, ns2__ConstructionType__Pebble = 18, ns2__ConstructionType__Permanent_x0020surface = 19, ns2__ConstructionType__Permanent_x0020surface_x0020mix = 20, ns2__ConstructionType__Pierced_x0020steel = 21, ns2__ConstructionType__Pre_stressed_x0020concrete = 22, ns2__ConstructionType__Rock = 23, ns2__ConstructionType__Rolled_x0020earth = 24, ns2__ConstructionType__Sand = 25, ns2__ConstructionType__Silt = 26, ns2__ConstructionType__Snow = 27, ns2__ConstructionType__Steel_x0020mat = 28, ns2__ConstructionType__Wood_x002ftimber = 29, ns2__ConstructionType__Not_x0020known = 30, ns2__ConstructionType__Not_x0020otherwise_x0020specified = 31};
#endif

#ifndef SOAP_TYPE_ns2__EnemyActivityPresentType
#define SOAP_TYPE_ns2__EnemyActivityPresentType (227)
/* ns2:EnemyActivityPresentType */
enum ns2__EnemyActivityPresentType {ns2__EnemyActivityPresentType__Hot = 0, ns2__EnemyActivityPresentType__Cold = 1};
#endif

#ifndef SOAP_TYPE_ns2__SecurityStatusType
#define SOAP_TYPE_ns2__SecurityStatusType (228)
/* ns2:SecurityStatusType */
enum ns2__SecurityStatusType {ns2__SecurityStatusType__Guarded = 0, ns2__SecurityStatusType__None = 1, ns2__SecurityStatusType__Secured = 2, ns2__SecurityStatusType__Not_x0020known = 3};
#endif

#ifndef SOAP_TYPE_ns2__CommandAndControlType
#define SOAP_TYPE_ns2__CommandAndControlType (229)
/* ns2:CommandAndControlType */
enum ns2__CommandAndControlType {ns2__CommandAndControlType__Command_x0020post = 0, ns2__CommandAndControlType__Coordination_x0020center = 1, ns2__CommandAndControlType__Headquarters = 2, ns2__CommandAndControlType__Operations_x0020center = 3, ns2__CommandAndControlType__Not_x0020known = 4, ns2__CommandAndControlType__Not_x0020otherwise_x0020specified = 5, ns2__CommandAndControlType__Air_x0020control_x0020center = 6, ns2__CommandAndControlType__Air_x0020operations_x0020center = 7, ns2__CommandAndControlType__Air_x0020operations_x0020coordination_x0020center = 8, ns2__CommandAndControlType__Air_x0020support_x0020operations_x0020center = 9, ns2__CommandAndControlType__Airborne_x0020warning_x0020and_x0020control_x0020system = 10, ns2__CommandAndControlType__Combined_x0020air_x0020operations_x0020center = 11, ns2__CommandAndControlType__Control_x0020and_x0020reporting_x0020center = 12, ns2__CommandAndControlType__Control_x0020and_x0020reporting_x0020post = 13, ns2__CommandAndControlType__Direct_x0020air_x0020support_x0020center = 14, ns2__CommandAndControlType__Direct_x0020air_x0020support_x0020center_x002c_x0020airborne = 15, ns2__CommandAndControlType__Forward_x0020air_x0020control_x0020party = 16, ns2__CommandAndControlType__Ground_x0020based_x0020air_x0020defence_x0020operations_x0020center = 17, ns2__CommandAndControlType__Marine_x0020tactical_x0020air_x0020command_x0020center = 18, ns2__CommandAndControlType__Marine_x0020tactical_x0020air_x0020direction_x0020center = 19, ns2__CommandAndControlType__Marine_x0020tactical_x0020air_x0020operations_x0020center = 20, ns2__CommandAndControlType__Recognised_x0020air_x0020picture_x0020production_x0020center = 21, ns2__CommandAndControlType__Squadron_x0020operations_x0020center = 22, ns2__CommandAndControlType__Surface_to_air_x0020missile_operations_x0020center = 23, ns2__CommandAndControlType__Tactical_x0020air_x0020control_x0020party = 24, ns2__CommandAndControlType__Wing_x0020operations_x0020center = 25, ns2__CommandAndControlType__Tactical_x0020operations_x0020center = 26};
#endif

#ifndef SOAP_TYPE_ns2__GroupPeopleType
#define SOAP_TYPE_ns2__GroupPeopleType (230)
/* ns2:GroupPeopleType */
enum ns2__GroupPeopleType {ns2__GroupPeopleType__Displaced_x0020person = 0, ns2__GroupPeopleType__Gang = 1, ns2__GroupPeopleType__Intellectual = 2, ns2__GroupPeopleType__Journalist = 3, ns2__GroupPeopleType__Landowner = 4, ns2__GroupPeopleType__Police_x0020chief = 5, ns2__GroupPeopleType__Merchant = 6, ns2__GroupPeopleType__Prisoner_x0020of_x0020war = 7, ns2__GroupPeopleType__Media_x002c_x0020not_x0020otherwise_x0020specified = 8, ns2__GroupPeopleType__Criminal = 9, ns2__GroupPeopleType__Local_x0020inhabitant = 10, ns2__GroupPeopleType__Prisoner = 11};
#endif

#ifndef SOAP_TYPE_ns2__AvailabilityType
#define SOAP_TYPE_ns2__AvailabilityType (231)
/* ns2:AvailabilityType */
enum ns2__AvailabilityType {ns2__AvailabilityType__After_x002030_x0020days = 0, ns2__AvailabilityType__Between_x002048_x0020hours_x0020and_x00204_x0020days = 1, ns2__AvailabilityType__Between_x00205_x0020and_x002015_x0020days = 2, ns2__AvailabilityType__Between_x002016_x0020and_x002030_x0020days = 3, ns2__AvailabilityType__Within_x002048_x0020hours = 4, ns2__AvailabilityType__Not_x0020available = 5};
#endif

#ifndef SOAP_TYPE_ns2__CommitmentStatusType
#define SOAP_TYPE_ns2__CommitmentStatusType (232)
/* ns2:CommitmentStatusType */
enum ns2__CommitmentStatusType {ns2__CommitmentStatusType__Committed = 0, ns2__CommitmentStatusType__Uncommitted = 1};
#endif

#ifndef SOAP_TYPE_ns2__ReadinessType
#define SOAP_TYPE_ns2__ReadinessType (233)
/* ns2:ReadinessType */
enum ns2__ReadinessType {ns2__ReadinessType__Battle_x0020stations = 0, ns2__ReadinessType__Red = 1, ns2__ReadinessType__Runaway_x0020alert = 2, ns2__ReadinessType__White = 3, ns2__ReadinessType__Yellow = 4, ns2__ReadinessType__Not_x0020otherwise_x0020specified = 5, ns2__ReadinessType__Airborn_x0020alert = 6, ns2__ReadinessType__Ground_x0020alert = 7, ns2__ReadinessType__Not_x0020ready_x0020within_x002012_x0020hours = 8, ns2__ReadinessType__Ready_x0020within_x002010_x0020minutes = 9, ns2__ReadinessType__Ready_x0020within_x002012_x0020hours = 10, ns2__ReadinessType__Ready_x0020within_x002015_x0020minutes = 11, ns2__ReadinessType__Ready_x0020within_x00202_x0020hours = 12, ns2__ReadinessType__Ready_x0020within_x002020_x0020minutes_x0020_x0028US_x0029 = 13, ns2__ReadinessType__Ready_x0020within_x00203_x0020hours = 14, ns2__ReadinessType__Ready_x0020within_x002030_x0020minutes = 15, ns2__ReadinessType__Ready_x0020within_x00205_x0020minutes = 16, ns2__ReadinessType__Ready_x0020within_x00206_x0020hours = 17, ns2__ReadinessType__Ready_x0020within_x002060_x0020minutes = 18, ns2__ReadinessType__Ready_x0020within_x0020less_x0020than_x00205_x0020minutes = 19, ns2__ReadinessType__Within_x002010_x0020days = 20, ns2__ReadinessType__Within_x0020180_x0020days = 21, ns2__ReadinessType__Within_x00202_x0020days = 22, ns2__ReadinessType__Within_x002020_x0020days = 23, ns2__ReadinessType__Within_x002030_x0020days = 24, ns2__ReadinessType__Within_x0020365_x0020days = 25, ns2__ReadinessType__Within_x00205_x0020days = 26, ns2__ReadinessType__Within_x002060_x0020days = 27, ns2__ReadinessType__Within_x002090_x0020days = 28, ns2__ReadinessType__Not_x0020known = 29, ns2__ReadinessType__Readiness_x0020state_x00201 = 30, ns2__ReadinessType__Readiness_x0020state_x00202 = 31, ns2__ReadinessType__Readiness_x0020state_x00203 = 32, ns2__ReadinessType__Readiness_x0020state_x00204 = 33, ns2__ReadinessType__Readiness_x0020state_x00205 = 34, ns2__ReadinessType__Readiness_x0020state_x00206 = 35, ns2__ReadinessType__Readiness_x0020state_x00207 = 36, ns2__ReadinessType__Readiness_x0020state_x00208 = 37, ns2__ReadinessType__Readiness_x0020state_x00209 = 38};
#endif

#ifndef SOAP_TYPE_ns2__CBRNDressStatusType
#define SOAP_TYPE_ns2__CBRNDressStatusType (234)
/* ns2:CBRNDressStatusType */
enum ns2__CBRNDressStatusType {ns2__CBRNDressStatusType__MOPP_x0020Ready = 0, ns2__CBRNDressStatusType__MOPP_x00200 = 1, ns2__CBRNDressStatusType__MOPP_x00201 = 2, ns2__CBRNDressStatusType__MOPP_x00202 = 3, ns2__CBRNDressStatusType__MOPP_x00203 = 4};
#endif

#ifndef SOAP_TYPE_ns2__TrainingStatusType
#define SOAP_TYPE_ns2__TrainingStatusType (235)
/* ns2:TrainingStatusType */
enum ns2__TrainingStatusType {ns2__TrainingStatusType__Amber = 0, ns2__TrainingStatusType__Green = 1, ns2__TrainingStatusType__Red = 2, ns2__TrainingStatusType__Not_x0020known = 3};
#endif

#ifndef SOAP_TYPE_ns2__ReinforcementStatusType
#define SOAP_TYPE_ns2__ReinforcementStatusType (236)
/* ns2:ReinforcementStatusType */
enum ns2__ReinforcementStatusType {ns2__ReinforcementStatusType__Detached_x0020only = 0, ns2__ReinforcementStatusType__Normal_x0020strength = 1, ns2__ReinforcementStatusType__Reinforced_x0020and_x0020detached = 2, ns2__ReinforcementStatusType__Reinforced_x0020only = 3, ns2__ReinforcementStatusType__Not_x0020known = 4};
#endif

#ifndef SOAP_TYPE_ns3__MediaFileFormType
#define SOAP_TYPE_ns3__MediaFileFormType (240)
/* ns3:MediaFileFormType */
enum ns3__MediaFileFormType {ns3__MediaFileFormType__FullSize = 0, ns3__MediaFileFormType__MediumSize = 1, ns3__MediaFileFormType__SmallSize = 2};
#endif

#ifndef SOAP_TYPE__ns2__UpdateResponseType_status
#define SOAP_TYPE__ns2__UpdateResponseType_status (243)
/* ns2:UpdateResponseType-status */
enum _ns2__UpdateResponseType_status {_ns2__UpdateResponseType_status__Success = 0, _ns2__UpdateResponseType_status__Failed = 1};
#endif

#ifndef SOAP_TYPE__ns2__DeleteResponseType_status
#define SOAP_TYPE__ns2__DeleteResponseType_status (244)
/* ns2:DeleteResponseType-status */
enum _ns2__DeleteResponseType_status {_ns2__DeleteResponseType_status__Success = 0, _ns2__DeleteResponseType_status__Failed = 1};
#endif

#ifndef SOAP_TYPE__ns2__DetailedPlaceInfoType_UsageStatus
#define SOAP_TYPE__ns2__DetailedPlaceInfoType_UsageStatus (326)
/* ns2:DetailedPlaceInfoType-UsageStatus */
enum _ns2__DetailedPlaceInfoType_UsageStatus {_ns2__DetailedPlaceInfoType_UsageStatus__Activated = 0, _ns2__DetailedPlaceInfoType_UsageStatus__Deactivated = 1, _ns2__DetailedPlaceInfoType_UsageStatus__Not_x0020known = 2};
#endif

#ifndef SOAP_TYPE__ns2__OrganizationType_UsageStatus
#define SOAP_TYPE__ns2__OrganizationType_UsageStatus (334)
/* ns2:OrganizationType-UsageStatus */
enum _ns2__OrganizationType_UsageStatus {_ns2__OrganizationType_UsageStatus__In_x0020action = 0, _ns2__OrganizationType_UsageStatus__Out_x0020of_x0020action = 1, _ns2__OrganizationType_UsageStatus__Not_x0020known = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (97)
typedef std::string xsd__QName;
#endif


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__wsu__Timestamp
#define SOAP_TYPE__wsu__Timestamp (9)
/* wsu:Timestamp */
struct _wsu__Timestamp
{
public:
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Created;	/* optional element of type xsd:string */
	char *Expires;	/* optional element of type xsd:string */
};
typedef struct _wsu__Timestamp _wsu__Timestamp;
#endif

#ifndef SOAP_TYPE__wsse__UsernameToken
#define SOAP_TYPE__wsse__UsernameToken (11)
/* wsse:UsernameToken */
struct _wsse__UsernameToken
{
public:
	char *Username;	/* optional element of type xsd:string */
	struct _wsse__Password *Password;	/* optional element of type wsse:Password */
	char *Nonce;	/* optional element of type xsd:string */
	char *wsu__Created;	/* optional element of type xsd:string */
	char *wsu__Id;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__UsernameToken _wsse__UsernameToken;
#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken
#define SOAP_TYPE__wsse__BinarySecurityToken (14)
/* Primitive wsse:BinarySecurityToken schema type: */
struct _wsse__BinarySecurityToken
{
public:
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__BinarySecurityToken _wsse__BinarySecurityToken;
#endif

#ifndef SOAP_TYPE__wsse__Reference
#define SOAP_TYPE__wsse__Reference (15)
/* wsse:Reference */
struct _wsse__Reference
{
public:
	char *URI;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Reference _wsse__Reference;
#endif

#ifndef SOAP_TYPE__wsse__Embedded
#define SOAP_TYPE__wsse__Embedded (16)
/* wsse:Embedded */
struct _wsse__Embedded
{
public:
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Embedded _wsse__Embedded;
#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier
#define SOAP_TYPE__wsse__KeyIdentifier (17)
/* Primitive wsse:KeyIdentifier schema type: */
struct _wsse__KeyIdentifier
{
public:
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__KeyIdentifier _wsse__KeyIdentifier;
#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference
#define SOAP_TYPE__wsse__SecurityTokenReference (18)
/* wsse:SecurityTokenReference */
struct _wsse__SecurityTokenReference
{
public:
	struct _wsse__Reference *Reference;	/* optional element of type wsse:Reference */
	struct _wsse__KeyIdentifier *KeyIdentifier;	/* optional element of type wsse:KeyIdentifier */
	struct _wsse__Embedded *Embedded;	/* optional element of type wsse:Embedded */
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Usage;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__SecurityTokenReference _wsse__SecurityTokenReference;
#endif

#ifndef SOAP_TYPE_ds__SignatureType
#define SOAP_TYPE_ds__SignatureType (22)
/* ds:SignatureType */
struct ds__SignatureType
{
public:
	struct ds__SignedInfoType *SignedInfo;	/* optional element of type ds:SignedInfoType */
	char *SignatureValue;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *KeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignatureType ds__SignatureType;
#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces
#define SOAP_TYPE__c14n__InclusiveNamespaces (31)
/* c14n:InclusiveNamespaces */
struct _c14n__InclusiveNamespaces
{
public:
	char *PrefixList;	/* optional attribute of type xsd:string */
};
typedef struct _c14n__InclusiveNamespaces _c14n__InclusiveNamespaces;
#endif

#ifndef SOAP_TYPE_ds__TransformType
#define SOAP_TYPE_ds__TransformType (32)
/* ds:TransformType */
struct ds__TransformType
{
public:
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
	char *__any;
	char *Algorithm;	/* optional attribute of type xsd:string */
};
typedef struct ds__TransformType ds__TransformType;
#endif

#ifndef SOAP_TYPE_ds__KeyInfoType
#define SOAP_TYPE_ds__KeyInfoType (25)
/* ds:KeyInfoType */
struct ds__KeyInfoType
{
public:
	char *KeyName;	/* optional element of type xsd:string */
	struct ds__KeyValueType *KeyValue;	/* optional element of type ds:KeyValueType */
	struct ds__RetrievalMethodType *RetrievalMethod;	/* optional element of type ds:RetrievalMethodType */
	struct ds__X509DataType *X509Data;	/* optional element of type ds:X509DataType */
	struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference;	/* optional element of type wsse:SecurityTokenReference */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__KeyInfoType ds__KeyInfoType;
#endif

#ifndef SOAP_TYPE_ds__SignedInfoType
#define SOAP_TYPE_ds__SignedInfoType (23)
/* ds:SignedInfoType */
struct ds__SignedInfoType
{
public:
	struct ds__CanonicalizationMethodType *CanonicalizationMethod;	/* required element of type ds:CanonicalizationMethodType */
	struct ds__SignatureMethodType *SignatureMethod;	/* required element of type ds:SignatureMethodType */
	int __sizeReference;	/* sequence of elements <Reference> */
	struct ds__ReferenceType **Reference;	/* required element of type ds:ReferenceType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignedInfoType ds__SignedInfoType;
#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType
#define SOAP_TYPE_ds__CanonicalizationMethodType (27)
/* ds:CanonicalizationMethodType */
struct ds__CanonicalizationMethodType
{
public:
	char *Algorithm;	/* required attribute of type xsd:string */
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
};
typedef struct ds__CanonicalizationMethodType ds__CanonicalizationMethodType;
#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType
#define SOAP_TYPE_ds__SignatureMethodType (28)
/* ds:SignatureMethodType */
struct ds__SignatureMethodType
{
public:
	int *HMACOutputLength;	/* optional element of type xsd:int */
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__SignatureMethodType ds__SignatureMethodType;
#endif

#ifndef SOAP_TYPE_ds__ReferenceType
#define SOAP_TYPE_ds__ReferenceType (29)
/* ds:ReferenceType */
struct ds__ReferenceType
{
public:
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	struct ds__DigestMethodType *DigestMethod;	/* required element of type ds:DigestMethodType */
	char *DigestValue;	/* required element of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__ReferenceType ds__ReferenceType;
#endif

#ifndef SOAP_TYPE_ds__TransformsType
#define SOAP_TYPE_ds__TransformsType (30)
/* ds:TransformsType */
struct ds__TransformsType
{
public:
	int __sizeTransform;	/* sequence of elements <Transform> */
	struct ds__TransformType *Transform;	/* required element of type ds:TransformType */
};
typedef struct ds__TransformsType ds__TransformsType;
#endif

#ifndef SOAP_TYPE_ds__DigestMethodType
#define SOAP_TYPE_ds__DigestMethodType (34)
/* ds:DigestMethodType */
struct ds__DigestMethodType
{
public:
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__DigestMethodType ds__DigestMethodType;
#endif

#ifndef SOAP_TYPE_ds__KeyValueType
#define SOAP_TYPE_ds__KeyValueType (35)
/* ds:KeyValueType */
struct ds__KeyValueType
{
public:
	struct ds__DSAKeyValueType *DSAKeyValue;	/* required element of type ds:DSAKeyValueType */
	struct ds__RSAKeyValueType *RSAKeyValue;	/* required element of type ds:RSAKeyValueType */
};
typedef struct ds__KeyValueType ds__KeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType
#define SOAP_TYPE_ds__RetrievalMethodType (37)
/* ds:RetrievalMethodType */
struct ds__RetrievalMethodType
{
public:
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__RetrievalMethodType ds__RetrievalMethodType;
#endif

#ifndef SOAP_TYPE_ds__X509DataType
#define SOAP_TYPE_ds__X509DataType (39)
/* ds:X509DataType */
struct ds__X509DataType
{
public:
	struct ds__X509IssuerSerialType *X509IssuerSerial;	/* required element of type ds:X509IssuerSerialType */
	char *X509SKI;	/* required element of type xsd:string */
	char *X509SubjectName;	/* required element of type xsd:string */
	char *X509Certificate;	/* required element of type xsd:string */
	char *X509CRL;	/* required element of type xsd:string */
};
typedef struct ds__X509DataType ds__X509DataType;
#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType
#define SOAP_TYPE_ds__X509IssuerSerialType (42)
/* ds:X509IssuerSerialType */
struct ds__X509IssuerSerialType
{
public:
	char *X509IssuerName;	/* required element of type xsd:string */
	int X509SerialNumber;	/* required element of type xsd:int */
};
typedef struct ds__X509IssuerSerialType ds__X509IssuerSerialType;
#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType
#define SOAP_TYPE_ds__DSAKeyValueType (43)
/* ds:DSAKeyValueType */
struct ds__DSAKeyValueType
{
public:
	char *G;	/* optional element of type xsd:string */
	char *Y;	/* required element of type xsd:string */
	char *J;	/* optional element of type xsd:string */
	char *P;	/* required element of type xsd:string */
	char *Q;	/* required element of type xsd:string */
	char *Seed;	/* required element of type xsd:string */
	char *PgenCounter;	/* required element of type xsd:string */
};
typedef struct ds__DSAKeyValueType ds__DSAKeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType
#define SOAP_TYPE_ds__RSAKeyValueType (44)
/* ds:RSAKeyValueType */
struct ds__RSAKeyValueType
{
public:
	char *Modulus;	/* required element of type xsd:string */
	char *Exponent;	/* required element of type xsd:string */
};
typedef struct ds__RSAKeyValueType ds__RSAKeyValueType;
#endif

#ifndef SOAP_TYPE__wsse__Security
#define SOAP_TYPE__wsse__Security (56)
/* wsse:Security */
struct _wsse__Security
{
public:
	struct _wsu__Timestamp *wsu__Timestamp;	/* optional element of type wsu:Timestamp */
	struct _wsse__UsernameToken *UsernameToken;	/* optional element of type wsse:UsernameToken */
	struct _wsse__BinarySecurityToken *BinarySecurityToken;	/* optional element of type wsse:BinarySecurityToken */
	struct ds__SignatureType *ds__Signature;	/* optional element of type ds:SignatureType */
	char *SOAP_ENV__actor;	/* optional attribute of type xsd:string */
	char *SOAP_ENV__role;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Security _wsse__Security;
#endif

#ifndef SOAP_TYPE__wsse__Password
#define SOAP_TYPE__wsse__Password (12)
/* Primitive wsse:Password schema type: */
struct _wsse__Password
{
public:
	char *__item;
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Password _wsse__Password;
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (61)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	struct _wsse__Security *wsse__Security;	/* mustUnderstand */
	char *wsa5__MessageID;	/* optional element of type wsa5:MessageID */
	struct wsa5__RelatesToType *wsa5__RelatesTo;	/* optional element of type wsa5:RelatesTo */
	struct wsa5__EndpointReferenceType *wsa5__From;	/* optional element of type wsa5:From */
	struct wsa5__EndpointReferenceType *wsa5__ReplyTo;	/* mustUnderstand */
	struct wsa5__EndpointReferenceType *wsa5__FaultTo;	/* mustUnderstand */
	char *wsa5__To;	/* mustUnderstand */
	char *wsa5__Action;	/* mustUnderstand */
};
#endif

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (63)
/* wsa5:EndpointReferenceType */
struct wsa5__EndpointReferenceType
{
public:
	char *Address;	/* required element of type xsd:string */
	struct wsa5__ReferenceParametersType *ReferenceParameters;	/* optional element of type wsa5:ReferenceParametersType */
	struct wsa5__MetadataType *Metadata;	/* optional element of type wsa5:MetadataType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa5__EndpointReferenceType wsa5__EndpointReferenceType;
#endif

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (64)
/* wsa5:ReferenceParametersType */
struct wsa5__ReferenceParametersType
{
public:
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa5__ReferenceParametersType wsa5__ReferenceParametersType;
#endif

#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (65)
/* wsa5:MetadataType */
struct wsa5__MetadataType
{
public:
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa5__MetadataType wsa5__MetadataType;
#endif

#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (67)
/* wsa5:ProblemActionType */
struct wsa5__ProblemActionType
{
public:
	char *Action;	/* optional element of type xsd:string */
	char *SoapAction;	/* optional element of type xsd:string */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa5__ProblemActionType wsa5__ProblemActionType;
#endif

#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (66)
/* Primitive wsa5:RelatesToType schema type: */
struct wsa5__RelatesToType
{
public:
	char *__item;
	char *RelationshipType;	/* optional attribute of type wsa5:RelationshipTypeOpenEnum */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa5__RelatesToType wsa5__RelatesToType;
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns2__CreateResponseType
#define SOAP_TYPE_ns2__CreateResponseType (102)
/* ns2:CreateResponseType */
class SOAP_CMAC ns2__CreateResponseType
{
public:
	std::string cid;	/* required attribute */
	xsd__QName type;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE_ns2__CreateResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CreateResponseType(): soap(NULL) { ns2__CreateResponseType::soap_default(NULL); }
	virtual ~ns2__CreateResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__UpdateResponseType
#define SOAP_TYPE_ns2__UpdateResponseType (104)
/* ns2:UpdateResponseType */
class SOAP_CMAC ns2__UpdateResponseType
{
public:
	enum _ns2__UpdateResponseType_status status;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_ns2__UpdateResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UpdateResponseType(): soap(NULL) { ns2__UpdateResponseType::soap_default(NULL); }
	virtual ~ns2__UpdateResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__DeleteResponseType
#define SOAP_TYPE_ns2__DeleteResponseType (106)
/* ns2:DeleteResponseType */
class SOAP_CMAC ns2__DeleteResponseType
{
public:
	enum _ns2__DeleteResponseType_status status;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_ns2__DeleteResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__DeleteResponseType(): soap(NULL) { ns2__DeleteResponseType::soap_default(NULL); }
	virtual ~ns2__DeleteResponseType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_GetResponseType
#define SOAP_TYPE__ns2__union_GetResponseType (260)
/* xsd:choice */
union _ns2__union_GetResponseType
{
#define SOAP_UNION__ns2__union_GetResponseType_Annotation	(1)
	class ns2__AnnotationType *Annotation;
#define SOAP_UNION__ns2__union_GetResponseType_Media	(2)
	class ns2__MediaType *Media;
#define SOAP_UNION__ns2__union_GetResponseType_Image	(3)
	class ns2__ImageType *Image;
#define SOAP_UNION__ns2__union_GetResponseType_Event	(4)
	class ns2__EventType *Event;
#define SOAP_UNION__ns2__union_GetResponseType_Place	(5)
	class ns2__PlaceType *Place;
#define SOAP_UNION__ns2__union_GetResponseType_SpecialPlace	(6)
	class ns2__SpecialPlaceType *SpecialPlace;
#define SOAP_UNION__ns2__union_GetResponseType_Report	(7)
	class ns2__ReportType *Report;
#define SOAP_UNION__ns2__union_GetResponseType_SpecialReport	(8)
	class ns2__SpecialReportType *SpecialReport;
#define SOAP_UNION__ns2__union_GetResponseType_Collection	(9)
	class ns2__CollectionType *Collection;
#define SOAP_UNION__ns2__union_GetResponseType_SpecialCollection	(10)
	class ns2__SpecialCollectionType *SpecialCollection;
#define SOAP_UNION__ns2__union_GetResponseType_ForumTopic	(11)
	class ns2__ForumTopicType *ForumTopic;
#define SOAP_UNION__ns2__union_GetResponseType_ForumPost	(12)
	class ns2__ForumPostType *ForumPost;
#define SOAP_UNION__ns2__union_GetResponseType_Deleted	(13)
	class ns2__DeletedType *Deleted;
#define SOAP_UNION__ns2__union_GetResponseType_ContentIdentifierReference	(14)
	class ns2__ContentIdentifierReferenceType *ContentIdentifierReference;
};
#endif

#ifndef SOAP_TYPE___ns2__union_GetResponseType
#define SOAP_TYPE___ns2__union_GetResponseType (245)
/* Operation wrapper: */
class SOAP_CMAC __ns2__union_GetResponseType
{
public:
	int __union_GetResponseType;	/* union discriminant (of union defined below) */
	union _ns2__union_GetResponseType union_GetResponseType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 245; } /* = unique id SOAP_TYPE___ns2__union_GetResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns2__union_GetResponseType() { __ns2__union_GetResponseType::soap_default(NULL); }
	virtual ~__ns2__union_GetResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__GetResponseType
#define SOAP_TYPE_ns2__GetResponseType (108)
/* ns2:GetResponseType */
class SOAP_CMAC ns2__GetResponseType
{
public:
	int __size_GetResponseType;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <-union-GetResponseType> */
	__ns2__union_GetResponseType *__union_GetResponseType;
	std::string count;	/* required attribute */
	std::string *first;	/* optional attribute */
	std::string *last;	/* optional attribute */
	time_t *newestLocalUpdateTime;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE_ns2__GetResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__GetResponseType(): __union_GetResponseType(NULL), first(NULL), last(NULL), newestLocalUpdateTime(NULL), soap(NULL) { ns2__GetResponseType::soap_default(NULL); }
	virtual ~ns2__GetResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentAssociationModelType
#define SOAP_TYPE_ns2__ContentAssociationModelType (110)
/* ns2:ContentAssociationModelType */
class SOAP_CMAC ns2__ContentAssociationModelType
{
public:
	class ns2__ContentAssociationModelMemberType *parent;	/* required element of type ns2:ContentAssociationModelMemberType */
	ns2__ContentAssociationModelMemberType *child;	/* required element of type ns2:ContentAssociationModelMemberType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE_ns2__ContentAssociationModelType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentAssociationModelType(): parent(NULL), child(NULL), soap(NULL) { ns2__ContentAssociationModelType::soap_default(NULL); }
	virtual ~ns2__ContentAssociationModelType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentAssociationModelMemberType
#define SOAP_TYPE_ns2__ContentAssociationModelMemberType (111)
/* ns2:ContentAssociationModelMemberType */
class SOAP_CMAC ns2__ContentAssociationModelMemberType
{
public:
	xsd__QName typeName;	/* required attribute */
	enum ns2__CardinalityType cardinality;	/* required attribute */
	std::string *associationPropertyName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE_ns2__ContentAssociationModelMemberType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentAssociationModelMemberType(): associationPropertyName(NULL), soap(NULL) { ns2__ContentAssociationModelMemberType::soap_default(NULL); }
	virtual ~ns2__ContentAssociationModelMemberType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentAssociationModelListType
#define SOAP_TYPE_ns2__ContentAssociationModelListType (112)
/* ns2:ContentAssociationModelListType */
class SOAP_CMAC ns2__ContentAssociationModelListType
{
public:
	std::vector<ns2__ContentAssociationModelType * >association;	/* required element of type ns2:ContentAssociationModelType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_ns2__ContentAssociationModelListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentAssociationModelListType(): soap(NULL) { ns2__ContentAssociationModelListType::soap_default(NULL); }
	virtual ~ns2__ContentAssociationModelListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__SecurityInfoListType
#define SOAP_TYPE_ns2__SecurityInfoListType (113)
/* ns2:SecurityInfoListType */
class SOAP_CMAC ns2__SecurityInfoListType
{
public:
	std::vector<std::string >securityInfo;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE_ns2__SecurityInfoListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SecurityInfoListType(): soap(NULL) { ns2__SecurityInfoListType::soap_default(NULL); }
	virtual ~ns2__SecurityInfoListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ExternalIdType
#define SOAP_TYPE_ns2__ExternalIdType (114)
/* ns2:ExternalIdType */
class SOAP_CMAC ns2__ExternalIdType
{
public:
	std::string source;	/* required element of type xsd:string */
	std::string id;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_ns2__ExternalIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ExternalIdType(): soap(NULL) { ns2__ExternalIdType::soap_default(NULL); }
	virtual ~ns2__ExternalIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__UserInfoType
#define SOAP_TYPE_ns2__UserInfoType (115)
/* ns2:UserInfoType */
class SOAP_CMAC ns2__UserInfoType
{
public:
	std::string firstName;	/* required element of type xsd:string */
	std::string lastName;	/* required element of type xsd:string */
	std::string title;	/* required element of type xsd:string */
	std::string email;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE_ns2__UserInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UserInfoType(): soap(NULL) { ns2__UserInfoType::soap_default(NULL); }
	virtual ~ns2__UserInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentVersionInfoType
#define SOAP_TYPE_ns2__ContentVersionInfoType (116)
/* ns2:ContentVersionInfoType */
class SOAP_CMAC ns2__ContentVersionInfoType
{
public:
	std::string userName;	/* required element of type ns3:NonEmptyStringType */
	time_t dateTime;	/* required element of type xsd:dateTime */
	ns2__UserInfoType *userInfo;	/* optional element of type ns2:UserInfoType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE_ns2__ContentVersionInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentVersionInfoType(): userInfo(NULL), soap(NULL) { ns2__ContentVersionInfoType::soap_default(NULL); }
	virtual ~ns2__ContentVersionInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentVersionInfoListType
#define SOAP_TYPE_ns2__ContentVersionInfoListType (117)
/* ns2:ContentVersionInfoListType */
class SOAP_CMAC ns2__ContentVersionInfoListType
{
public:
	ns2__ContentVersionInfoType *created;	/* required element of type ns2:ContentVersionInfoType */
	std::vector<ns2__ContentVersionInfoType * >revised;	/* optional element of type ns2:ContentVersionInfoType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE_ns2__ContentVersionInfoListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentVersionInfoListType(): created(NULL), soap(NULL) { ns2__ContentVersionInfoListType::soap_default(NULL); }
	virtual ~ns2__ContentVersionInfoListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AbstractContentReferenceType
#define SOAP_TYPE_ns2__AbstractContentReferenceType (119)
/* ns2:AbstractContentReferenceType */
class SOAP_CMAC ns2__AbstractContentReferenceType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE_ns2__AbstractContentReferenceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AbstractContentReferenceType(): soap(NULL) { ns2__AbstractContentReferenceType::soap_default(NULL); }
	virtual ~ns2__AbstractContentReferenceType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_AbstractContentReferenceListType
#define SOAP_TYPE__ns2__union_AbstractContentReferenceListType (274)
/* xsd:choice */
union _ns2__union_AbstractContentReferenceListType
{
#define SOAP_UNION__ns2__union_AbstractContentReferenceListType_ContentIdentifierReference	(1)
	ns2__ContentIdentifierReferenceType *ContentIdentifierReference;
};
#endif

#ifndef SOAP_TYPE___ns2__union_AbstractContentReferenceListType
#define SOAP_TYPE___ns2__union_AbstractContentReferenceListType (273)
/* Operation wrapper: */
class SOAP_CMAC __ns2__union_AbstractContentReferenceListType
{
public:
	int __unionAbstractContentReference;	/* union discriminant (of union defined below) */
	union _ns2__union_AbstractContentReferenceListType __union_AbstractContentReferenceListType;
public:
	virtual int soap_type() const { return 273; } /* = unique id SOAP_TYPE___ns2__union_AbstractContentReferenceListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns2__union_AbstractContentReferenceListType() { __ns2__union_AbstractContentReferenceListType::soap_default(NULL); }
	virtual ~__ns2__union_AbstractContentReferenceListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AbstractContentReferenceListType
#define SOAP_TYPE_ns2__AbstractContentReferenceListType (120)
/* ns2:AbstractContentReferenceListType */
class SOAP_CMAC ns2__AbstractContentReferenceListType
{
public:
	int __sizeAbstractContentReference;	/* sequence of elements <-union-AbstractContentReferenceListType> */
	__ns2__union_AbstractContentReferenceListType *__union_AbstractContentReferenceListType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_ns2__AbstractContentReferenceListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AbstractContentReferenceListType(): __union_AbstractContentReferenceListType(NULL), soap(NULL) { ns2__AbstractContentReferenceListType::soap_default(NULL); }
	virtual ~ns2__AbstractContentReferenceListType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_AbstractContentReferenceHolderType
#define SOAP_TYPE__ns2__union_AbstractContentReferenceHolderType (276)
/* xsd:choice */
union _ns2__union_AbstractContentReferenceHolderType
{
#define SOAP_UNION__ns2__union_AbstractContentReferenceHolderType_ContentIdentifierReference	(1)
	ns2__ContentIdentifierReferenceType *ContentIdentifierReference;
};
#endif

#ifndef SOAP_TYPE_ns2__AbstractContentReferenceHolderType
#define SOAP_TYPE_ns2__AbstractContentReferenceHolderType (121)
/* ns2:AbstractContentReferenceHolderType */
class SOAP_CMAC ns2__AbstractContentReferenceHolderType
{
public:
	int __unionAbstractContentReference;	/* union discriminant (of union defined below) */
	union _ns2__union_AbstractContentReferenceHolderType __union_AbstractContentReferenceHolderType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_ns2__AbstractContentReferenceHolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AbstractContentReferenceHolderType(): soap(NULL) { ns2__AbstractContentReferenceHolderType::soap_default(NULL); }
	virtual ~ns2__AbstractContentReferenceHolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AbstractContentType
#define SOAP_TYPE_ns2__AbstractContentType (123)
/* ns2:AbstractContentType */
class SOAP_CMAC ns2__AbstractContentType
{
public:
	ns2__ContentVersionInfoListType *revisionHistory;	/* required element of type ns2:ContentVersionInfoListType */
	time_t localUpdateTime;	/* required element of type xsd:dateTime */
	std::string securityInfo;	/* required element of type xsd:string */
	std::string title;	/* required element of type ns3:NonEmptyStringType */
	std::string *description;	/* optional element of type xsd:string */
	class ns2__UnitType *unit;	/* optional element of type ns2:UnitType */
	ns2__ExternalIdType *extId;	/* optional element of type ns2:ExternalIdType */
	std::string cid;	/* required attribute */
	std::string contentURL;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_ns2__AbstractContentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AbstractContentType(): revisionHistory(NULL), description(NULL), unit(NULL), extId(NULL), soap(NULL) { ns2__AbstractContentType::soap_default(NULL); }
	virtual ~ns2__AbstractContentType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AbstractContentUserPropertiesType
#define SOAP_TYPE_ns2__AbstractContentUserPropertiesType (124)
/* ns2:AbstractContentUserPropertiesType */
class SOAP_CMAC ns2__AbstractContentUserPropertiesType
{
public:
	std::string securityInfo;	/* required element of type xsd:string */
	std::string title;	/* required element of type ns3:NonEmptyStringType */
	std::string *description;	/* optional element of type xsd:string */
	ns2__UnitType *unit;	/* optional element of type ns2:UnitType */
	ns2__ExternalIdType *extId;	/* optional element of type ns2:ExternalIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE_ns2__AbstractContentUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AbstractContentUserPropertiesType(): description(NULL), unit(NULL), extId(NULL), soap(NULL) { ns2__AbstractContentUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__AbstractContentUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_LocationListType
#define SOAP_TYPE__ns2__union_LocationListType (286)
/* xsd:choice */
union _ns2__union_LocationListType
{
#define SOAP_UNION__ns2__union_LocationListType_ns3__Point	(1)
	class ns3__PointType *ns3__Point;
#define SOAP_UNION__ns2__union_LocationListType_ns3__LineString	(2)
	class ns3__LineStringType *ns3__LineString;
#define SOAP_UNION__ns2__union_LocationListType_ns3__LinearRing	(3)
	class ns3__LinearRingType *ns3__LinearRing;
#define SOAP_UNION__ns2__union_LocationListType_ns3__Polygon	(4)
	class ns3__PolygonType *ns3__Polygon;
};
#endif

#ifndef SOAP_TYPE___ns2__union_LocationListType
#define SOAP_TYPE___ns2__union_LocationListType (281)
/* Operation wrapper: */
class SOAP_CMAC __ns2__union_LocationListType
{
public:
	int __unionAbstractGeometry;	/* union discriminant (of union defined below) */
	union _ns2__union_LocationListType __union_LocationListType;
public:
	virtual int soap_type() const { return 281; } /* = unique id SOAP_TYPE___ns2__union_LocationListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns2__union_LocationListType() { __ns2__union_LocationListType::soap_default(NULL); }
	virtual ~__ns2__union_LocationListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__LocationListType
#define SOAP_TYPE_ns2__LocationListType (125)
/* ns2:LocationListType */
class SOAP_CMAC ns2__LocationListType
{
public:
	int __sizeAbstractGeometry;	/* sequence of elements <-union-LocationListType> */
	__ns2__union_LocationListType *__union_LocationListType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE_ns2__LocationListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__LocationListType(): __union_LocationListType(NULL), soap(NULL) { ns2__LocationListType::soap_default(NULL); }
	virtual ~ns2__LocationListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CategoryListType
#define SOAP_TYPE_ns2__CategoryListType (126)
/* ns2:CategoryListType */
class SOAP_CMAC ns2__CategoryListType
{
public:
	std::vector<std::string >category;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_ns2__CategoryListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CategoryListType(): soap(NULL) { ns2__CategoryListType::soap_default(NULL); }
	virtual ~ns2__CategoryListType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PeopleType
#define SOAP_TYPE_ns2__PeopleType (149)
/* ns2:PeopleType */
class SOAP_CMAC ns2__PeopleType
{
public:
	enum ns2__PeopleTypeType *Type;	/* optional element of type ns2:PeopleTypeType */
	enum ns2__PeopleType2Type *Type2;	/* optional element of type ns2:PeopleType2Type */
	enum ns2__RankType *Rank;	/* optional element of type ns2:RankType */
	enum ns2__GenderType *Gender;	/* optional element of type ns2:GenderType */
	std::string Company;	/* required element of type xsd:string */
	std::string BusinessPhone;	/* required element of type xsd:string */
	std::string MobilePhone;	/* required element of type xsd:string */
	std::string Fax;	/* required element of type xsd:string */
	std::string PrimayEmail;	/* required element of type xsd:string */
	std::string SecondaryEmail;	/* required element of type xsd:string */
	enum ns2__DutyStatusType *DutyStatus;	/* optional element of type ns2:DutyStatusType */
	enum ns2__PhysicalStatusType *PhysicalStatus;	/* optional element of type ns2:PhysicalStatusType */
	enum ns2__PhysicalStatus2Type *PhysicalStatus2;	/* optional element of type ns2:PhysicalStatus2Type */
	std::string Summary;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE_ns2__PeopleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PeopleType(): Type(NULL), Type2(NULL), Rank(NULL), Gender(NULL), DutyStatus(NULL), PhysicalStatus(NULL), PhysicalStatus2(NULL), soap(NULL) { ns2__PeopleType::soap_default(NULL); }
	virtual ~ns2__PeopleType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CIDNE_USCOREPersonType
#define SOAP_TYPE_ns2__CIDNE_USCOREPersonType (150)
/* ns2:CIDNE_PersonType */
class SOAP_CMAC ns2__CIDNE_USCOREPersonType
{
public:
	enum ns2__ClassificationType Classification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType Releasibility;	/* required element of type ns2:ReleasabilityType */
	class ns2__NameInfoType *NameInfo;	/* required element of type ns2:NameInfoType */
	enum ns2__ClassificationType AssessmentClassification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType AssessmentReleasibility;	/* required element of type ns2:ReleasabilityType */
	std::string Assessment;	/* required element of type xsd:string */
	std::string Significance;	/* required element of type xsd:string */
	class ns2__CIDNE_USCOREPersonalInfoType *CIDNE_USCOREPersonalInfo;	/* required element of type ns2:CIDNE_PersonalInfoType */
	class ns2__ContactInfoType *ContactInfo;	/* required element of type ns2:ContactInfoType */
	class ns2__TitleAliasIdInfoType *TitleAliasIdInfo;	/* required element of type ns2:TitleAliasIdInfoType */
	std::vector<class ns2__DescriptionType * >Description;	/* optional element of type ns2:DescriptionType */
	class ns2__PEMSIIType *PEMSII;	/* required element of type ns2:PEMSIIType */
	std::vector<enum ns2__RoleType >Role;	/* optional element of type ns2:RoleType */
	std::vector<class ns2__VehicleInfoType * >Vehicle;	/* optional element of type ns2:VehicleInfoType */
	std::vector<class ns2__FamilyMemberInfoType * >FamilyMember;	/* optional element of type ns2:FamilyMemberInfoType */
	std::vector<class ns2__LocationInfoType * >Location;	/* optional element of type ns2:LocationInfoType */
	std::vector<class ns2__RemarkType * >Remark;	/* optional element of type ns2:RemarkType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE_ns2__CIDNE_USCOREPersonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CIDNE_USCOREPersonType(): NameInfo(NULL), CIDNE_USCOREPersonalInfo(NULL), ContactInfo(NULL), TitleAliasIdInfo(NULL), PEMSII(NULL), soap(NULL) { ns2__CIDNE_USCOREPersonType::soap_default(NULL); }
	virtual ~ns2__CIDNE_USCOREPersonType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__NameInfoType
#define SOAP_TYPE_ns2__NameInfoType (151)
/* ns2:NameInfoType */
class SOAP_CMAC ns2__NameInfoType
{
public:
	std::string FirstName;	/* required element of type xsd:string */
	std::string MiddleName;	/* required element of type xsd:string */
	std::string LastName;	/* required element of type xsd:string */
	std::string Suffix;	/* required element of type xsd:string */
	std::string Kunya;	/* required element of type xsd:string */
	std::string Laqab;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE_ns2__NameInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__NameInfoType(): soap(NULL) { ns2__NameInfoType::soap_default(NULL); }
	virtual ~ns2__NameInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CIDNE_USCOREPersonalInfoType
#define SOAP_TYPE_ns2__CIDNE_USCOREPersonalInfoType (152)
/* ns2:CIDNE_PersonalInfoType */
class SOAP_CMAC ns2__CIDNE_USCOREPersonalInfoType
{
public:
	std::string Tribe;	/* required element of type xsd:string */
	std::string Confederation;	/* required element of type xsd:string */
	std::string House;	/* required element of type xsd:string */
	std::string Clan;	/* required element of type xsd:string */
	enum ns2__YesNoType Religion;	/* required element of type ns2:YesNoType */
	std::string ReligiousSectType;	/* required element of type xsd:string */
	std::string ReligionPracticing;	/* required element of type xsd:string */
	std::string *ReligionDetails;	/* optional element of type xsd:string */
	std::string *ReligiousInfluence;	/* optional element of type xsd:string */
	std::string *AttendsMosqueChurch;	/* optional element of type xsd:string */
	enum ns2__PoliticalStanceType PoliticalStance;	/* required element of type ns2:PoliticalStanceType */
	std::string Ethnicity;	/* required element of type xsd:string */
	std::string Nationality;	/* required element of type xsd:string */
	std::string BirthDateOrYear;	/* required element of type xsd:string */
	std::string DeathDateOrYear;	/* required element of type xsd:string */
	std::string LanguagesSpoken;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE_ns2__CIDNE_USCOREPersonalInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CIDNE_USCOREPersonalInfoType(): ReligionDetails(NULL), ReligiousInfluence(NULL), AttendsMosqueChurch(NULL), soap(NULL) { ns2__CIDNE_USCOREPersonalInfoType::soap_default(NULL); }
	virtual ~ns2__CIDNE_USCOREPersonalInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContactInfoType
#define SOAP_TYPE_ns2__ContactInfoType (153)
/* ns2:ContactInfoType */
class SOAP_CMAC ns2__ContactInfoType
{
public:
	std::string *HomePhone;	/* optional element of type xsd:string */
	std::string *WorkPhone;	/* optional element of type xsd:string */
	std::string *CellPhone;	/* optional element of type xsd:string */
	std::string *AlternateCell;	/* optional element of type xsd:string */
	std::string *AlternateWork;	/* optional element of type xsd:string */
	std::string *Fax;	/* optional element of type xsd:string */
	std::string *Email;	/* optional element of type xsd:string */
	std::string *AlternateEmail;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE_ns2__ContactInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContactInfoType(): HomePhone(NULL), WorkPhone(NULL), CellPhone(NULL), AlternateCell(NULL), AlternateWork(NULL), Fax(NULL), Email(NULL), AlternateEmail(NULL), soap(NULL) { ns2__ContactInfoType::soap_default(NULL); }
	virtual ~ns2__ContactInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__OtherIDType
#define SOAP_TYPE_ns2__OtherIDType (154)
/* ns2:OtherIDType */
class SOAP_CMAC ns2__OtherIDType
{
public:
	std::string Type;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE_ns2__OtherIDType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__OtherIDType(): soap(NULL) { ns2__OtherIDType::soap_default(NULL); }
	virtual ~ns2__OtherIDType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__TitleAliasIdInfoType
#define SOAP_TYPE_ns2__TitleAliasIdInfoType (155)
/* ns2:TitleAliasIdInfoType */
class SOAP_CMAC ns2__TitleAliasIdInfoType
{
public:
	std::vector<std::string >CaptureTag;	/* optional element of type xsd:string */
	std::vector<std::string >ISN;	/* optional element of type xsd:string */
	std::vector<ns2__OtherIDType * >OtherID;	/* optional element of type ns2:OtherIDType */
	std::vector<std::string >Alias;	/* required element of type xsd:string */
	std::vector<std::string >Title;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE_ns2__TitleAliasIdInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__TitleAliasIdInfoType(): soap(NULL) { ns2__TitleAliasIdInfoType::soap_default(NULL); }
	virtual ~ns2__TitleAliasIdInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__DescriptionType
#define SOAP_TYPE_ns2__DescriptionType (156)
/* ns2:DescriptionType */
class SOAP_CMAC ns2__DescriptionType
{
public:
	enum ns2__GenderType Gender;	/* required element of type ns2:GenderType */
	enum ns2__EyeColorType EyeColor;	/* required element of type ns2:EyeColorType */
	enum ns2__HairColorType HairColor;	/* required element of type ns2:HairColorType */
	enum ns2__BuildType Build;	/* required element of type ns2:BuildType */
	enum ns2__MannerOfDressType MannerOfDress;	/* required element of type ns2:MannerOfDressType */
	enum ns2__WritingHandType WritingHand;	/* required element of type ns2:WritingHandType */
	std::string Height;	/* required element of type xsd:string */
	std::string Weight;	/* required element of type xsd:string */
	std::string *FacialHair;	/* optional element of type xsd:string */
	std::string *DistinguishingMarks;	/* optional element of type xsd:string */
	std::string *Details;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE_ns2__DescriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__DescriptionType(): FacialHair(NULL), DistinguishingMarks(NULL), Details(NULL), soap(NULL) { ns2__DescriptionType::soap_default(NULL); }
	virtual ~ns2__DescriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PEMSIIType
#define SOAP_TYPE_ns2__PEMSIIType (157)
/* ns2:PEMSIIType */
class SOAP_CMAC ns2__PEMSIIType
{
public:
	enum ns2__YesNoType Political;	/* required element of type ns2:YesNoType */
	enum ns2__YesNoType Economic;	/* required element of type ns2:YesNoType */
	enum ns2__YesNoType Military;	/* required element of type ns2:YesNoType */
	enum ns2__YesNoType Social;	/* required element of type ns2:YesNoType */
	enum ns2__YesNoType Information;	/* required element of type ns2:YesNoType */
	enum ns2__YesNoType Infrastructure;	/* required element of type ns2:YesNoType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE_ns2__PEMSIIType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PEMSIIType(): soap(NULL) { ns2__PEMSIIType::soap_default(NULL); }
	virtual ~ns2__PEMSIIType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__VehicleInfoType
#define SOAP_TYPE_ns2__VehicleInfoType (158)
/* ns2:VehicleInfoType */
class SOAP_CMAC ns2__VehicleInfoType
{
public:
	std::string Type;	/* required element of type xsd:string */
	std::string *LicensePlate;	/* optional element of type xsd:string */
	std::string *Color;	/* optional element of type xsd:string */
	std::string *Description;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE_ns2__VehicleInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__VehicleInfoType(): LicensePlate(NULL), Color(NULL), Description(NULL), soap(NULL) { ns2__VehicleInfoType::soap_default(NULL); }
	virtual ~ns2__VehicleInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__FamilyMemberInfoType
#define SOAP_TYPE_ns2__FamilyMemberInfoType (159)
/* ns2:FamilyMemberInfoType */
class SOAP_CMAC ns2__FamilyMemberInfoType
{
public:
	std::string Relationship;	/* required element of type xsd:string */
	std::string CIDNE_USCOREPersonName;	/* required element of type xsd:string */
	std::string *YearOfBirth;	/* optional element of type xsd:string */
	std::string *Description;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE_ns2__FamilyMemberInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__FamilyMemberInfoType(): YearOfBirth(NULL), Description(NULL), soap(NULL) { ns2__FamilyMemberInfoType::soap_default(NULL); }
	virtual ~ns2__FamilyMemberInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__LocationInfoType
#define SOAP_TYPE_ns2__LocationInfoType (160)
/* ns2:LocationInfoType */
class SOAP_CMAC ns2__LocationInfoType
{
public:
	std::string StartDate;	/* required element of type xsd:string */
	std::string EndDate;	/* required element of type xsd:string */
	std::string Latitude;	/* required element of type xsd:string */
	std::string Longitude;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE_ns2__LocationInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__LocationInfoType(): soap(NULL) { ns2__LocationInfoType::soap_default(NULL); }
	virtual ~ns2__LocationInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__RemarkType
#define SOAP_TYPE_ns2__RemarkType (161)
/* ns2:RemarkType */
class SOAP_CMAC ns2__RemarkType
{
public:
	std::string Type;	/* required element of type xsd:string */
	enum ns2__ClassificationType Classification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType Releasibility;	/* required element of type ns2:ReleasabilityType */
	std::string Date;	/* required element of type xsd:string */
	std::string Description;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE_ns2__RemarkType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__RemarkType(): soap(NULL) { ns2__RemarkType::soap_default(NULL); }
	virtual ~ns2__RemarkType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__HTSAreaAssessmentType
#define SOAP_TYPE_ns2__HTSAreaAssessmentType (162)
/* ns2:HTSAreaAssessmentType */
class SOAP_CMAC ns2__HTSAreaAssessmentType
{
public:
	enum ns2__ClassificationType Classification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType Releasibility;	/* required element of type ns2:ReleasabilityType */
	enum ns2__JustificationType Justification;	/* required element of type ns2:JustificationType */
	std::string *Country;	/* optional element of type xsd:string */
	std::string *Province;	/* optional element of type xsd:string */
	std::string TrackingNumber;	/* required element of type xsd:string */
	enum ns2__ProductType ProductType;	/* required element of type ns2:ProductType */
	std::vector<enum ns2__DataCollectionMethodType >DataCollectionMethod;	/* optional element of type ns2:DataCollectionMethodType */
	std::vector<enum ns2__AnalyticalToolMethodType >AnalyticalToolMethod;	/* optional element of type ns2:AnalyticalToolMethodType */
	std::vector<enum ns2__KeywordType >Keyword;	/* optional element of type ns2:KeywordType */
	std::string Summary;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE_ns2__HTSAreaAssessmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__HTSAreaAssessmentType(): Country(NULL), Province(NULL), soap(NULL) { ns2__HTSAreaAssessmentType::soap_default(NULL); }
	virtual ~ns2__HTSAreaAssessmentType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CIDNE_USCORECMODailyReportType
#define SOAP_TYPE_ns2__CIDNE_USCORECMODailyReportType (163)
/* ns2:CIDNE_CMODailyReportType */
class SOAP_CMAC ns2__CIDNE_USCORECMODailyReportType
{
public:
	enum ns2__ClassificationType Classification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType Releasability;	/* required element of type ns2:ReleasabilityType */
	std::string TrackingNumber;	/* required element of type xsd:string */
	enum ns2__MissionType Mission;	/* required element of type ns2:MissionType */
	enum ns2__LineOfOperationType LineOfOperation;	/* required element of type ns2:LineOfOperationType */
	std::vector<enum ns2__MinistryType >AffectedMinistry;	/* optional element of type ns2:MinistryType */
	class ns2__PEMSIIOutcomesType *PEMSIIOutcomes;	/* required element of type ns2:PEMSIIOutcomesType */
	class ns2__AssessmentsType *Assessments;	/* required element of type ns2:AssessmentsType */
	class ns2__UpcomingEventsType *UpcomingEvents;	/* required element of type ns2:UpcomingEventsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE_ns2__CIDNE_USCORECMODailyReportType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CIDNE_USCORECMODailyReportType(): PEMSIIOutcomes(NULL), Assessments(NULL), UpcomingEvents(NULL), soap(NULL) { ns2__CIDNE_USCORECMODailyReportType::soap_default(NULL); }
	virtual ~ns2__CIDNE_USCORECMODailyReportType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PEMSIIOutcomesType
#define SOAP_TYPE_ns2__PEMSIIOutcomesType (164)
/* ns2:PEMSIIOutcomesType */
class SOAP_CMAC ns2__PEMSIIOutcomesType
{
public:
	class ns2__PEMSIIOutcomeType *Political;	/* required element of type ns2:PEMSIIOutcomeType */
	ns2__PEMSIIOutcomeType *Military;	/* required element of type ns2:PEMSIIOutcomeType */
	ns2__PEMSIIOutcomeType *Economic;	/* required element of type ns2:PEMSIIOutcomeType */
	ns2__PEMSIIOutcomeType *Social;	/* required element of type ns2:PEMSIIOutcomeType */
	ns2__PEMSIIOutcomeType *Infrastructure;	/* required element of type ns2:PEMSIIOutcomeType */
	ns2__PEMSIIOutcomeType *Information;	/* required element of type ns2:PEMSIIOutcomeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE_ns2__PEMSIIOutcomesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PEMSIIOutcomesType(): Political(NULL), Military(NULL), Economic(NULL), Social(NULL), Infrastructure(NULL), Information(NULL), soap(NULL) { ns2__PEMSIIOutcomesType::soap_default(NULL); }
	virtual ~ns2__PEMSIIOutcomesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PEMSIIOutcomeType
#define SOAP_TYPE_ns2__PEMSIIOutcomeType (165)
/* ns2:PEMSIIOutcomeType */
class SOAP_CMAC ns2__PEMSIIOutcomeType
{
public:
	enum ns2__ClassificationType Classification;	/* required element of type ns2:ClassificationType */
	enum ns2__ReleasabilityType Releasability;	/* required element of type ns2:ReleasabilityType */
	std::string Summary;	/* required element of type xsd:string */
	std::string IndividualsInvolved;	/* required element of type xsd:string */
	std::string MGRS;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE_ns2__PEMSIIOutcomeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PEMSIIOutcomeType(): soap(NULL) { ns2__PEMSIIOutcomeType::soap_default(NULL); }
	virtual ~ns2__PEMSIIOutcomeType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AssessmentsType
#define SOAP_TYPE_ns2__AssessmentsType (166)
/* ns2:AssessmentsType */
class SOAP_CMAC ns2__AssessmentsType
{
public:
	std::string Commanders;	/* required element of type xsd:string */
	std::string USAID;	/* required element of type xsd:string */
	std::string USDA;	/* required element of type xsd:string */
	std::string DOS;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE_ns2__AssessmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AssessmentsType(): soap(NULL) { ns2__AssessmentsType::soap_default(NULL); }
	virtual ~ns2__AssessmentsType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__UpcomingEventsType
#define SOAP_TYPE_ns2__UpcomingEventsType (167)
/* ns2:UpcomingEventsType */
class SOAP_CMAC ns2__UpcomingEventsType
{
public:
	class ns2__UpcomingEventType *Next24Hours;	/* required element of type ns2:UpcomingEventType */
	ns2__UpcomingEventType *Next48Hours;	/* required element of type ns2:UpcomingEventType */
	ns2__UpcomingEventType *Next72Hours;	/* required element of type ns2:UpcomingEventType */
	std::string TagBox;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE_ns2__UpcomingEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UpcomingEventsType(): Next24Hours(NULL), Next48Hours(NULL), Next72Hours(NULL), soap(NULL) { ns2__UpcomingEventsType::soap_default(NULL); }
	virtual ~ns2__UpcomingEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__UpcomingEventType
#define SOAP_TYPE_ns2__UpcomingEventType (168)
/* ns2:UpcomingEventType */
class SOAP_CMAC ns2__UpcomingEventType
{
public:
	std::string Summary;	/* required element of type xsd:string */
	std::string Location;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE_ns2__UpcomingEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UpcomingEventType(): soap(NULL) { ns2__UpcomingEventType::soap_default(NULL); }
	virtual ~ns2__UpcomingEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__DetailedPlaceInfoType
#define SOAP_TYPE_ns2__DetailedPlaceInfoType (171)
/* ns2:DetailedPlaceInfoType */
class SOAP_CMAC ns2__DetailedPlaceInfoType
{
public:
	enum ns2__OperationalStatusType *OperationalStatus;	/* optional element of type ns2:OperationalStatusType */
	enum ns2__OperationalStatus2Type *OperationalStatus2;	/* optional element of type ns2:OperationalStatus2Type */
	enum ns2__OccupationStatusType *OccupationStatus;	/* optional element of type ns2:OccupationStatusType */
	enum ns2__ConstructionType *Construction;	/* optional element of type ns2:ConstructionType */
	enum _ns2__DetailedPlaceInfoType_UsageStatus *UsageStatus;	/* optional element of type ns2:DetailedPlaceInfoType-UsageStatus */
	enum ns2__EnemyActivityPresentType *EnemyActivityPresent;	/* optional element of type ns2:EnemyActivityPresentType */
	enum ns2__SecurityStatusType *SecurityStatus;	/* optional element of type ns2:SecurityStatusType */
	enum ns2__YesNoType *MinesPresent;	/* optional element of type ns2:YesNoType */
	enum ns2__YesNoType *DemolitionScheduled;	/* optional element of type ns2:YesNoType */
	std::string Height;	/* required element of type xsd:string */
	std::string Length;	/* required element of type xsd:string */
	std::string Width;	/* required element of type xsd:string */
	std::string Summary;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE_ns2__DetailedPlaceInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__DetailedPlaceInfoType(): OperationalStatus(NULL), OperationalStatus2(NULL), OccupationStatus(NULL), Construction(NULL), UsageStatus(NULL), EnemyActivityPresent(NULL), SecurityStatus(NULL), MinesPresent(NULL), DemolitionScheduled(NULL), soap(NULL) { ns2__DetailedPlaceInfoType::soap_default(NULL); }
	virtual ~ns2__DetailedPlaceInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__OrganizationType
#define SOAP_TYPE_ns2__OrganizationType (174)
/* ns2:OrganizationType */
class SOAP_CMAC ns2__OrganizationType
{
public:
	enum ns2__YesNoType *CommandFunction;	/* optional element of type ns2:YesNoType */
	enum ns2__CommandAndControlType *CommandAndControl;	/* optional element of type ns2:CommandAndControlType */
	enum ns2__GroupPeopleType *GroupPeople;	/* optional element of type ns2:GroupPeopleType */
	enum ns2__AvailabilityType *Availability;	/* optional element of type ns2:AvailabilityType */
	enum ns2__OperationalStatusType *OperationalStatus;	/* optional element of type ns2:OperationalStatusType */
	enum ns2__OperationalStatus2Type *OperationalStatus2;	/* optional element of type ns2:OperationalStatus2Type */
	enum _ns2__OrganizationType_UsageStatus *UsageStatus;	/* optional element of type ns2:OrganizationType-UsageStatus */
	enum ns2__CommitmentStatusType *CommitmentStatus;	/* optional element of type ns2:CommitmentStatusType */
	enum ns2__ReadinessType *Readiness;	/* optional element of type ns2:ReadinessType */
	enum ns2__CBRNDressStatusType *CBRNDressStatus;	/* optional element of type ns2:CBRNDressStatusType */
	enum ns2__TrainingStatusType *TrainingStatus;	/* optional element of type ns2:TrainingStatusType */
	enum ns2__ReinforcementStatusType *ReinforcementStatus;	/* optional element of type ns2:ReinforcementStatusType */
	std::string Summary;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE_ns2__OrganizationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__OrganizationType(): CommandFunction(NULL), CommandAndControl(NULL), GroupPeople(NULL), Availability(NULL), OperationalStatus(NULL), OperationalStatus2(NULL), UsageStatus(NULL), CommitmentStatus(NULL), Readiness(NULL), CBRNDressStatus(NULL), TrainingStatus(NULL), ReinforcementStatus(NULL), soap(NULL) { ns2__OrganizationType::soap_default(NULL); }
	virtual ~ns2__OrganizationType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__TimePeriodType
#define SOAP_TYPE_ns3__TimePeriodType (175)
/* ns3:TimePeriodType */
class SOAP_CMAC ns3__TimePeriodType
{
public:
	time_t start;	/* required element of type xsd:dateTime */
	time_t end;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE_ns3__TimePeriodType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__TimePeriodType(): soap(NULL) { ns3__TimePeriodType::soap_default(NULL); }
	virtual ~ns3__TimePeriodType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__BaseRequestType
#define SOAP_TYPE_ns3__BaseRequestType (176)
/* ns3:BaseRequestType */
class SOAP_CMAC ns3__BaseRequestType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE_ns3__BaseRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__BaseRequestType(): soap(NULL) { ns3__BaseRequestType::soap_default(NULL); }
	virtual ~ns3__BaseRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__BaseServiceCapabilitiesType
#define SOAP_TYPE_ns3__BaseServiceCapabilitiesType (177)
/* ns3:BaseServiceCapabilitiesType */
class SOAP_CMAC ns3__BaseServiceCapabilitiesType
{
public:
	std::string version;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE_ns3__BaseServiceCapabilitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__BaseServiceCapabilitiesType(): soap(NULL) { ns3__BaseServiceCapabilitiesType::soap_default(NULL); }
	virtual ~ns3__BaseServiceCapabilitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__EnvelopeType
#define SOAP_TYPE_ns3__EnvelopeType (179)
/* ns3:EnvelopeType */
class SOAP_CMAC ns3__EnvelopeType
{
public:
	std::string lowerCorner;	/* required element of type ns3:CoordinatesType */
	std::string upperCorner;	/* required element of type ns3:CoordinatesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE_ns3__EnvelopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__EnvelopeType(): soap(NULL) { ns3__EnvelopeType::soap_default(NULL); }
	virtual ~ns3__EnvelopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__AbstractGeometryType
#define SOAP_TYPE_ns3__AbstractGeometryType (180)
/* ns3:AbstractGeometryType */
class SOAP_CMAC ns3__AbstractGeometryType
{
public:
	std::string *crs;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE_ns3__AbstractGeometryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__AbstractGeometryType(): crs(NULL), soap(NULL) { ns3__AbstractGeometryType::soap_default(NULL); }
	virtual ~ns3__AbstractGeometryType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_CreateType
#define SOAP_TYPE__ns2__union_CreateType (351)
/* xsd:choice */
union _ns2__union_CreateType
{
#define SOAP_UNION__ns2__union_CreateType_AnnotationUserProperties	(1)
	class ns2__AnnotationUserPropertiesType *AnnotationUserProperties;
#define SOAP_UNION__ns2__union_CreateType_MediaUserProperties	(2)
	class ns2__MediaUserPropertiesType *MediaUserProperties;
#define SOAP_UNION__ns2__union_CreateType_ImageUserProperties	(3)
	class ns2__ImageUserPropertiesType *ImageUserProperties;
#define SOAP_UNION__ns2__union_CreateType_EventUserProperties	(4)
	class ns2__EventUserPropertiesType *EventUserProperties;
#define SOAP_UNION__ns2__union_CreateType_PlaceUserProperties	(5)
	class ns2__PlaceUserPropertiesType *PlaceUserProperties;
#define SOAP_UNION__ns2__union_CreateType_ReportUserProperties	(6)
	class ns2__ReportUserPropertiesType *ReportUserProperties;
#define SOAP_UNION__ns2__union_CreateType_CollectionUserProperties	(7)
	class ns2__CollectionUserPropertiesType *CollectionUserProperties;
#define SOAP_UNION__ns2__union_CreateType_ForumTopicUserProperties	(8)
	class ns2__ForumTopicUserPropertiesType *ForumTopicUserProperties;
#define SOAP_UNION__ns2__union_CreateType_ForumPostUserProperties	(9)
	class ns2__ForumPostUserPropertiesType *ForumPostUserProperties;
};
#endif

#ifndef SOAP_TYPE_ns2__CreateType
#define SOAP_TYPE_ns2__CreateType (101)
/* ns2:CreateType */
class SOAP_CMAC ns2__CreateType : public ns3__BaseRequestType
{
public:
	int __unionAbstractContentUserProperties;	/* union discriminant (of union defined below) */
	union _ns2__union_CreateType __union_CreateType;
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_ns2__CreateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CreateType() { ns2__CreateType::soap_default(NULL); }
	virtual ~ns2__CreateType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_UpdateType
#define SOAP_TYPE__ns2__union_UpdateType (352)
/* xsd:choice */
union _ns2__union_UpdateType
{
#define SOAP_UNION__ns2__union_UpdateType_AnnotationUserProperties	(1)
	ns2__AnnotationUserPropertiesType *AnnotationUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_MediaUserProperties	(2)
	ns2__MediaUserPropertiesType *MediaUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_ImageUserProperties	(3)
	ns2__ImageUserPropertiesType *ImageUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_EventUserProperties	(4)
	ns2__EventUserPropertiesType *EventUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_PlaceUserProperties	(5)
	ns2__PlaceUserPropertiesType *PlaceUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_ReportUserProperties	(6)
	ns2__ReportUserPropertiesType *ReportUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_CollectionUserProperties	(7)
	ns2__CollectionUserPropertiesType *CollectionUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_ForumTopicUserProperties	(8)
	ns2__ForumTopicUserPropertiesType *ForumTopicUserProperties;
#define SOAP_UNION__ns2__union_UpdateType_ForumPostUserProperties	(9)
	ns2__ForumPostUserPropertiesType *ForumPostUserProperties;
};
#endif

#ifndef SOAP_TYPE_ns2__UpdateType
#define SOAP_TYPE_ns2__UpdateType (103)
/* ns2:UpdateType */
class SOAP_CMAC ns2__UpdateType : public ns3__BaseRequestType
{
public:
	int __unionAbstractContentUserProperties;	/* union discriminant (of union defined below) */
	union _ns2__union_UpdateType __union_UpdateType;
	std::string cid;	/* required attribute */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE_ns2__UpdateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UpdateType() { ns2__UpdateType::soap_default(NULL); }
	virtual ~ns2__UpdateType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__DeleteType
#define SOAP_TYPE_ns2__DeleteType (105)
/* ns2:DeleteType */
class SOAP_CMAC ns2__DeleteType : public ns3__BaseRequestType
{
public:
	std::string cid;	/* required attribute */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE_ns2__DeleteType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__DeleteType() { ns2__DeleteType::soap_default(NULL); }
	virtual ~ns2__DeleteType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__GetType
#define SOAP_TYPE_ns2__GetType (107)
/* ns2:GetType */
class SOAP_CMAC ns2__GetType : public ns3__BaseRequestType
{
public:
	std::string queryExpression;	/* required attribute */
	std::string maxResults;	/* optional attribute */
	std::string startFrom;	/* optional attribute */
	bool includeUserInfo;	/* optional attribute */
	bool useNamesForCategories;	/* optional attribute */
	bool useNamesForUnits;	/* optional attribute */
	bool showContentReferencesOnly;	/* optional attribute */
	bool showAssociationsToDeletedContent;	/* optional attribute */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE_ns2__GetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__GetType() { ns2__GetType::soap_default(NULL); }
	virtual ~ns2__GetType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentServiceCapabilitiesType
#define SOAP_TYPE_ns2__ContentServiceCapabilitiesType (109)
/* ns2:ContentServiceCapabilitiesType */
class SOAP_CMAC ns2__ContentServiceCapabilitiesType : public ns3__BaseServiceCapabilitiesType
{
public:
	std::string maxResultsLimit;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:positiveInteger */
	std::string defaultCRS;	/* required element of type xsd:anyURI */
	std::string supportedCRSList;	/* required element of type ns3:URIListType */
	std::string contentTypes;	/* required element of type ns3:QNameListType */
	ns2__ContentAssociationModelListType *contentAssociationModels;	/* required element of type ns2:ContentAssociationModelListType */
	ns2__SecurityInfoListType *securityInfoList;	/* required element of type ns2:SecurityInfoListType */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE_ns2__ContentServiceCapabilitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentServiceCapabilitiesType(): contentAssociationModels(NULL), securityInfoList(NULL) { ns2__ContentServiceCapabilitiesType::soap_default(NULL); }
	virtual ~ns2__ContentServiceCapabilitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__UnitType
#define SOAP_TYPE_ns2__UnitType (118)
/* Primitive ns2:UnitType schema type: */
class SOAP_CMAC ns2__UnitType
{
public:
	std::string __item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_ns2__UnitType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__UnitType(): soap(NULL) { ns2__UnitType::soap_default(NULL); }
	virtual ~ns2__UnitType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ContentIdentifierReferenceType
#define SOAP_TYPE_ns2__ContentIdentifierReferenceType (122)
/* ns2:ContentIdentifierReferenceType */
class SOAP_CMAC ns2__ContentIdentifierReferenceType : public ns2__AbstractContentReferenceType
{
public:
	std::string cid;	/* required attribute */
	xsd__QName *type;	/* optional attribute */
	std::string *contentURL;	/* optional attribute */
	std::string *mediaFileUrl;	/* optional attribute */
	enum ns3__MediaFileFormType *mediaFileForm;	/* optional attribute */
	time_t *localUpdateTime;	/* optional attribute */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE_ns2__ContentIdentifierReferenceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ContentIdentifierReferenceType(): type(NULL), contentURL(NULL), mediaFileUrl(NULL), mediaFileForm(NULL), localUpdateTime(NULL) { ns2__ContentIdentifierReferenceType::soap_default(NULL); }
	virtual ~ns2__ContentIdentifierReferenceType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AnnotationUserPropertiesType
#define SOAP_TYPE_ns2__AnnotationUserPropertiesType (127)
/* ns2:AnnotationUserPropertiesType */
class SOAP_CMAC ns2__AnnotationUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceHolderType *parent;	/* required element of type ns2:AbstractContentReferenceHolderType */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE_ns2__AnnotationUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AnnotationUserPropertiesType(): children(NULL), parent(NULL) { ns2__AnnotationUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__AnnotationUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__AnnotationType
#define SOAP_TYPE_ns2__AnnotationType (128)
/* ns2:AnnotationType */
class SOAP_CMAC ns2__AnnotationType : public ns2__AbstractContentType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceHolderType *parent;	/* required element of type ns2:AbstractContentReferenceHolderType */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE_ns2__AnnotationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__AnnotationType(): children(NULL), parent(NULL) { ns2__AnnotationType::soap_default(NULL); }
	virtual ~ns2__AnnotationType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__MediaUserPropertiesType
#define SOAP_TYPE_ns2__MediaUserPropertiesType (129)
/* ns2:MediaUserPropertiesType */
class SOAP_CMAC ns2__MediaUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	std::string *fileReference;	/* optional element of type ns3:NonEmptyStringType */
	ns2__LocationListType *locationList;	/* optional element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* optional element of type ns3:TimePeriodType */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE_ns2__MediaUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__MediaUserPropertiesType(): fileReference(NULL), locationList(NULL), ns3__timePeriod(NULL) { ns2__MediaUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__MediaUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__MediaFileUrlType
#define SOAP_TYPE_ns2__MediaFileUrlType (130)
/* Primitive ns2:MediaFileUrlType schema type: */
class SOAP_CMAC ns2__MediaFileUrlType
{
public:
	std::string __item;
	enum ns3__MediaFileFormType form;	/* required attribute */
	std::string size;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE_ns2__MediaFileUrlType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__MediaFileUrlType(): soap(NULL) { ns2__MediaFileUrlType::soap_default(NULL); }
	virtual ~ns2__MediaFileUrlType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__MediaType
#define SOAP_TYPE_ns2__MediaType (131)
/* ns2:MediaType */
class SOAP_CMAC ns2__MediaType : public ns2__AbstractContentType
{
public:
	std::string *fileReference;	/* optional element of type ns3:NonEmptyStringType */
	ns2__LocationListType *locationList;	/* optional element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* optional element of type ns3:TimePeriodType */
	std::string mfid;	/* required element of type ns3:GuidType */
	std::string *name;	/* optional element of type xsd:string */
	std::string type;	/* required element of type ns3:MimeType */
	std::vector<ns2__MediaFileUrlType * >url;	/* sequence of 1 to 3 elements */
	ns2__AbstractContentReferenceListType *parents;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *annotations;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE_ns2__MediaType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__MediaType(): fileReference(NULL), locationList(NULL), ns3__timePeriod(NULL), name(NULL), parents(NULL), annotations(NULL) { ns2__MediaType::soap_default(NULL); }
	virtual ~ns2__MediaType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__EventUserPropertiesType
#define SOAP_TYPE_ns2__EventUserPropertiesType (134)
/* ns2:EventUserPropertiesType */
class SOAP_CMAC ns2__EventUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__LocationListType *locationList;	/* required element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* required element of type ns3:TimePeriodType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_ns2__EventUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__EventUserPropertiesType(): categoryList(NULL), locationList(NULL), ns3__timePeriod(NULL), children(NULL) { ns2__EventUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__EventUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__EventType
#define SOAP_TYPE_ns2__EventType (135)
/* ns2:EventType */
class SOAP_CMAC ns2__EventType : public ns2__AbstractContentType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__LocationListType *locationList;	/* required element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* required element of type ns3:TimePeriodType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *parents;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *annotations;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE_ns2__EventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__EventType(): categoryList(NULL), locationList(NULL), ns3__timePeriod(NULL), children(NULL), parents(NULL), annotations(NULL) { ns2__EventType::soap_default(NULL); }
	virtual ~ns2__EventType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PlaceUserPropertiesType
#define SOAP_TYPE_ns2__PlaceUserPropertiesType (136)
/* ns2:PlaceUserPropertiesType */
class SOAP_CMAC ns2__PlaceUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__LocationListType *locationList;	/* required element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* optional element of type ns3:TimePeriodType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE_ns2__PlaceUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PlaceUserPropertiesType(): categoryList(NULL), locationList(NULL), ns3__timePeriod(NULL), children(NULL) { ns2__PlaceUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__PlaceUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__PlaceType
#define SOAP_TYPE_ns2__PlaceType (137)
/* ns2:PlaceType */
class SOAP_CMAC ns2__PlaceType : public ns2__AbstractContentType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__LocationListType *locationList;	/* required element of type ns2:LocationListType */
	ns3__TimePeriodType *ns3__timePeriod;	/* optional element of type ns3:TimePeriodType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *parents;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *annotations;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE_ns2__PlaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__PlaceType(): categoryList(NULL), locationList(NULL), ns3__timePeriod(NULL), children(NULL), parents(NULL), annotations(NULL) { ns2__PlaceType::soap_default(NULL); }
	virtual ~ns2__PlaceType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ReportUserPropertiesType
#define SOAP_TYPE_ns2__ReportUserPropertiesType (138)
/* ns2:ReportUserPropertiesType */
class SOAP_CMAC ns2__ReportUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns3__TimePeriodType *ns3__timePeriod;	/* required element of type ns3:TimePeriodType */
	ns2__LocationListType *locationList;	/* optional element of type ns2:LocationListType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE_ns2__ReportUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ReportUserPropertiesType(): ns3__timePeriod(NULL), locationList(NULL), children(NULL) { ns2__ReportUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__ReportUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ReportType
#define SOAP_TYPE_ns2__ReportType (139)
/* ns2:ReportType */
class SOAP_CMAC ns2__ReportType : public ns2__AbstractContentType
{
public:
	ns3__TimePeriodType *ns3__timePeriod;	/* required element of type ns3:TimePeriodType */
	ns2__LocationListType *locationList;	/* optional element of type ns2:LocationListType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *parents;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *annotations;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE_ns2__ReportType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ReportType(): ns3__timePeriod(NULL), locationList(NULL), children(NULL), parents(NULL), annotations(NULL) { ns2__ReportType::soap_default(NULL); }
	virtual ~ns2__ReportType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CollectionUserPropertiesType
#define SOAP_TYPE_ns2__CollectionUserPropertiesType (140)
/* ns2:CollectionUserPropertiesType */
class SOAP_CMAC ns2__CollectionUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE_ns2__CollectionUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CollectionUserPropertiesType(): children(NULL) { ns2__CollectionUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__CollectionUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__CollectionType
#define SOAP_TYPE_ns2__CollectionType (141)
/* ns2:CollectionType */
class SOAP_CMAC ns2__CollectionType : public ns2__AbstractContentType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *parents;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *annotations;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE_ns2__CollectionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__CollectionType(): children(NULL), parents(NULL), annotations(NULL) { ns2__CollectionType::soap_default(NULL); }
	virtual ~ns2__CollectionType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ForumTopicUserPropertiesType
#define SOAP_TYPE_ns2__ForumTopicUserPropertiesType (142)
/* ns2:ForumTopicUserPropertiesType */
class SOAP_CMAC ns2__ForumTopicUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE_ns2__ForumTopicUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ForumTopicUserPropertiesType(): categoryList(NULL), children(NULL) { ns2__ForumTopicUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__ForumTopicUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ForumTopicType
#define SOAP_TYPE_ns2__ForumTopicType (143)
/* ns2:ForumTopicType */
class SOAP_CMAC ns2__ForumTopicType : public ns2__AbstractContentType
{
public:
	ns2__CategoryListType *categoryList;	/* required element of type ns2:CategoryListType */
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceListType *posts;	/* optional element of type ns2:AbstractContentReferenceListType */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE_ns2__ForumTopicType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ForumTopicType(): categoryList(NULL), children(NULL), posts(NULL) { ns2__ForumTopicType::soap_default(NULL); }
	virtual ~ns2__ForumTopicType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ForumPostUserPropertiesType
#define SOAP_TYPE_ns2__ForumPostUserPropertiesType (144)
/* ns2:ForumPostUserPropertiesType */
class SOAP_CMAC ns2__ForumPostUserPropertiesType : public ns2__AbstractContentUserPropertiesType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceHolderType *parent;	/* required element of type ns2:AbstractContentReferenceHolderType */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE_ns2__ForumPostUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ForumPostUserPropertiesType(): children(NULL), parent(NULL) { ns2__ForumPostUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__ForumPostUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ForumPostType
#define SOAP_TYPE_ns2__ForumPostType (145)
/* ns2:ForumPostType */
class SOAP_CMAC ns2__ForumPostType : public ns2__AbstractContentType
{
public:
	ns2__AbstractContentReferenceListType *children;	/* optional element of type ns2:AbstractContentReferenceListType */
	ns2__AbstractContentReferenceHolderType *parent;	/* required element of type ns2:AbstractContentReferenceHolderType */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE_ns2__ForumPostType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ForumPostType(): children(NULL), parent(NULL) { ns2__ForumPostType::soap_default(NULL); }
	virtual ~ns2__ForumPostType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__DeletedType
#define SOAP_TYPE_ns2__DeletedType (146)
/* ns2:DeletedType */
class SOAP_CMAC ns2__DeletedType : public ns2__AbstractContentType
{
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE_ns2__DeletedType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__DeletedType() { ns2__DeletedType::soap_default(NULL); }
	virtual ~ns2__DeletedType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__GetCapabilitiesType
#define SOAP_TYPE_ns3__GetCapabilitiesType (178)
/* ns3:GetCapabilitiesType */
class SOAP_CMAC ns3__GetCapabilitiesType : public ns3__BaseRequestType
{
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE_ns3__GetCapabilitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__GetCapabilitiesType() { ns3__GetCapabilitiesType::soap_default(NULL); }
	virtual ~ns3__GetCapabilitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__PointType
#define SOAP_TYPE_ns3__PointType (181)
/* ns3:PointType */
class SOAP_CMAC ns3__PointType : public ns3__AbstractGeometryType
{
public:
	std::string coordinates;	/* required element of type ns3:CoordinatesType */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE_ns3__PointType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__PointType() { ns3__PointType::soap_default(NULL); }
	virtual ~ns3__PointType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__LineStringType
#define SOAP_TYPE_ns3__LineStringType (182)
/* ns3:LineStringType */
class SOAP_CMAC ns3__LineStringType : public ns3__AbstractGeometryType
{
public:
	std::string coordinates;	/* required element of type ns3:CoordinatesType */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE_ns3__LineStringType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__LineStringType() { ns3__LineStringType::soap_default(NULL); }
	virtual ~ns3__LineStringType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__LinearRingType
#define SOAP_TYPE_ns3__LinearRingType (183)
/* ns3:LinearRingType */
class SOAP_CMAC ns3__LinearRingType : public ns3__AbstractGeometryType
{
public:
	std::string coordinates;	/* required element of type ns3:CoordinatesType */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE_ns3__LinearRingType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__LinearRingType() { ns3__LinearRingType::soap_default(NULL); }
	virtual ~ns3__LinearRingType() { }
};
#endif

#ifndef SOAP_TYPE_ns3__PolygonType
#define SOAP_TYPE_ns3__PolygonType (184)
/* ns3:PolygonType */
class SOAP_CMAC ns3__PolygonType : public ns3__AbstractGeometryType
{
public:
	ns3__LinearRingType *exterior;	/* required element of type ns3:LinearRingType */
	ns3__LinearRingType *interior;	/* required element of type ns3:LinearRingType */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE_ns3__PolygonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__PolygonType(): exterior(NULL), interior(NULL) { ns3__PolygonType::soap_default(NULL); }
	virtual ~ns3__PolygonType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ImageUserPropertiesType
#define SOAP_TYPE_ns2__ImageUserPropertiesType (132)
/* ns2:ImageUserPropertiesType */
class SOAP_CMAC ns2__ImageUserPropertiesType : public ns2__MediaUserPropertiesType
{
public:
	int *direction;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE_ns2__ImageUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ImageUserPropertiesType(): direction(NULL) { ns2__ImageUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__ImageUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns2__ImageType
#define SOAP_TYPE_ns2__ImageType (133)
/* ns2:ImageType */
class SOAP_CMAC ns2__ImageType : public ns2__MediaType
{
public:
	int *direction;	/* optional element of type xsd:int */
	std::string width;	/* required element of type xsd:positiveInteger */
	std::string height;	/* required element of type xsd:positiveInteger */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE_ns2__ImageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__ImageType(): direction(NULL) { ns2__ImageType::soap_default(NULL); }
	virtual ~ns2__ImageType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialReportUserPropertiesType
#define SOAP_TYPE__ns2__union_SpecialReportUserPropertiesType (370)
/* xsd:choice */
union _ns2__union_SpecialReportUserPropertiesType
{
#define SOAP_UNION__ns2__union_SpecialReportUserPropertiesType_People	(1)
	ns2__PeopleType *People;
#define SOAP_UNION__ns2__union_SpecialReportUserPropertiesType_CIDNE_USCOREPerson	(2)
	ns2__CIDNE_USCOREPersonType *CIDNE_USCOREPerson;
#define SOAP_UNION__ns2__union_SpecialReportUserPropertiesType_HTSAreaAssessment	(3)
	ns2__HTSAreaAssessmentType *HTSAreaAssessment;
#define SOAP_UNION__ns2__union_SpecialReportUserPropertiesType_CIDNE_USCORECMODailyReport	(4)
	ns2__CIDNE_USCORECMODailyReportType *CIDNE_USCORECMODailyReport;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialReportUserPropertiesType
#define SOAP_TYPE_ns2__SpecialReportUserPropertiesType (147)
/* ns2:SpecialReportUserPropertiesType */
class SOAP_CMAC ns2__SpecialReportUserPropertiesType : public ns2__ReportUserPropertiesType
{
public:
	int __union_SpecialReportUserPropertiesType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialReportUserPropertiesType union_SpecialReportUserPropertiesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE_ns2__SpecialReportUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialReportUserPropertiesType() { ns2__SpecialReportUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__SpecialReportUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialReportType
#define SOAP_TYPE__ns2__union_SpecialReportType (371)
/* xsd:choice */
union _ns2__union_SpecialReportType
{
#define SOAP_UNION__ns2__union_SpecialReportType_People	(1)
	ns2__PeopleType *People;
#define SOAP_UNION__ns2__union_SpecialReportType_CIDNE_USCOREPerson	(2)
	ns2__CIDNE_USCOREPersonType *CIDNE_USCOREPerson;
#define SOAP_UNION__ns2__union_SpecialReportType_HTSAreaAssessment	(3)
	ns2__HTSAreaAssessmentType *HTSAreaAssessment;
#define SOAP_UNION__ns2__union_SpecialReportType_CIDNE_USCORECMODailyReport	(4)
	ns2__CIDNE_USCORECMODailyReportType *CIDNE_USCORECMODailyReport;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialReportType
#define SOAP_TYPE_ns2__SpecialReportType (148)
/* ns2:SpecialReportType */
class SOAP_CMAC ns2__SpecialReportType : public ns2__ReportType
{
public:
	int __union_SpecialReportType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialReportType union_SpecialReportType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE_ns2__SpecialReportType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialReportType() { ns2__SpecialReportType::soap_default(NULL); }
	virtual ~ns2__SpecialReportType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialPlaceUserPropertiesType
#define SOAP_TYPE__ns2__union_SpecialPlaceUserPropertiesType (373)
/* xsd:choice */
union _ns2__union_SpecialPlaceUserPropertiesType
{
#define SOAP_UNION__ns2__union_SpecialPlaceUserPropertiesType_DetailedPlaceInfo	(1)
	ns2__DetailedPlaceInfoType *DetailedPlaceInfo;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialPlaceUserPropertiesType
#define SOAP_TYPE_ns2__SpecialPlaceUserPropertiesType (169)
/* ns2:SpecialPlaceUserPropertiesType */
class SOAP_CMAC ns2__SpecialPlaceUserPropertiesType : public ns2__PlaceUserPropertiesType
{
public:
	int __union_SpecialPlaceUserPropertiesType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialPlaceUserPropertiesType union_SpecialPlaceUserPropertiesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE_ns2__SpecialPlaceUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialPlaceUserPropertiesType() { ns2__SpecialPlaceUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__SpecialPlaceUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialPlaceType
#define SOAP_TYPE__ns2__union_SpecialPlaceType (374)
/* xsd:choice */
union _ns2__union_SpecialPlaceType
{
#define SOAP_UNION__ns2__union_SpecialPlaceType_DetailedPlaceInfo	(1)
	ns2__DetailedPlaceInfoType *DetailedPlaceInfo;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialPlaceType
#define SOAP_TYPE_ns2__SpecialPlaceType (170)
/* ns2:SpecialPlaceType */
class SOAP_CMAC ns2__SpecialPlaceType : public ns2__PlaceType
{
public:
	int __union_SpecialPlaceType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialPlaceType union_SpecialPlaceType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE_ns2__SpecialPlaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialPlaceType() { ns2__SpecialPlaceType::soap_default(NULL); }
	virtual ~ns2__SpecialPlaceType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialCollectionUserPropertiesType
#define SOAP_TYPE__ns2__union_SpecialCollectionUserPropertiesType (376)
/* xsd:choice */
union _ns2__union_SpecialCollectionUserPropertiesType
{
#define SOAP_UNION__ns2__union_SpecialCollectionUserPropertiesType_Organization	(1)
	ns2__OrganizationType *Organization;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialCollectionUserPropertiesType
#define SOAP_TYPE_ns2__SpecialCollectionUserPropertiesType (172)
/* ns2:SpecialCollectionUserPropertiesType */
class SOAP_CMAC ns2__SpecialCollectionUserPropertiesType : public ns2__CollectionUserPropertiesType
{
public:
	int __union_SpecialCollectionUserPropertiesType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialCollectionUserPropertiesType union_SpecialCollectionUserPropertiesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE_ns2__SpecialCollectionUserPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialCollectionUserPropertiesType() { ns2__SpecialCollectionUserPropertiesType::soap_default(NULL); }
	virtual ~ns2__SpecialCollectionUserPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns2__union_SpecialCollectionType
#define SOAP_TYPE__ns2__union_SpecialCollectionType (377)
/* xsd:choice */
union _ns2__union_SpecialCollectionType
{
#define SOAP_UNION__ns2__union_SpecialCollectionType_Organization	(1)
	ns2__OrganizationType *Organization;
};
#endif

#ifndef SOAP_TYPE_ns2__SpecialCollectionType
#define SOAP_TYPE_ns2__SpecialCollectionType (173)
/* ns2:SpecialCollectionType */
class SOAP_CMAC ns2__SpecialCollectionType : public ns2__CollectionType
{
public:
	int __union_SpecialCollectionType;	/* union discriminant (of union defined below) */
	union _ns2__union_SpecialCollectionType union_SpecialCollectionType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE_ns2__SpecialCollectionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__SpecialCollectionType() { ns2__SpecialCollectionType::soap_default(NULL); }
	virtual ~ns2__SpecialCollectionType() { }
};
#endif

#ifndef SOAP_TYPE___ns4__CreateOperation
#define SOAP_TYPE___ns4__CreateOperation (381)
/* Operation wrapper: */
struct __ns4__CreateOperation
{
public:
	ns2__CreateType *ns2__Create;	/* optional element of type ns2:CreateType */
};
#endif

#ifndef SOAP_TYPE___ns4__GetOperation
#define SOAP_TYPE___ns4__GetOperation (385)
/* Operation wrapper: */
struct __ns4__GetOperation
{
public:
	ns2__GetType *ns2__Get;	/* optional element of type ns2:GetType */
};
#endif

#ifndef SOAP_TYPE___ns4__DeleteOperationResponse
#define SOAP_TYPE___ns4__DeleteOperationResponse (386)
/* Operation wrapper: */
struct __ns4__DeleteOperationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE___ns4__DeleteOperation
#define SOAP_TYPE___ns4__DeleteOperation (390)
/* Operation wrapper: */
struct __ns4__DeleteOperation
{
public:
	ns2__DeleteType *ns2__Delete;	/* optional element of type ns2:DeleteType */
};
#endif

#ifndef SOAP_TYPE___ns4__UpdateOperationResponse
#define SOAP_TYPE___ns4__UpdateOperationResponse (391)
/* Operation wrapper: */
struct __ns4__UpdateOperationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE___ns4__UpdateOperation
#define SOAP_TYPE___ns4__UpdateOperation (395)
/* Operation wrapper: */
struct __ns4__UpdateOperation
{
public:
	ns2__UpdateType *ns2__Update;	/* optional element of type ns2:UpdateType */
};
#endif

#ifndef SOAP_TYPE___ns4__GetCapabilitiesOperation
#define SOAP_TYPE___ns4__GetCapabilitiesOperation (399)
/* Operation wrapper: */
struct __ns4__GetCapabilitiesOperation
{
public:
	ns3__GetCapabilitiesType *ns3__GetCapabilities;	/* optional element of type ns3:GetCapabilitiesType */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (400)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (402)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (405)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (406)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (68)
typedef char *wsa5__RelationshipTypeOpenEnum;
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (69)
typedef char *wsa5__FaultCodesOpenEnumType;
#endif

#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (75)
typedef struct wsa5__EndpointReferenceType _wsa5__EndpointReference;
#endif

#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (76)
typedef struct wsa5__ReferenceParametersType _wsa5__ReferenceParameters;
#endif

#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (77)
typedef struct wsa5__MetadataType _wsa5__Metadata;
#endif

#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (78)
typedef char *_wsa5__MessageID;
#endif

#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (79)
typedef struct wsa5__RelatesToType _wsa5__RelatesTo;
#endif

#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (80)
typedef struct wsa5__EndpointReferenceType _wsa5__ReplyTo;
#endif

#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (81)
typedef struct wsa5__EndpointReferenceType _wsa5__From;
#endif

#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (82)
typedef struct wsa5__EndpointReferenceType _wsa5__FaultTo;
#endif

#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (83)
typedef char *_wsa5__To;
#endif

#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (84)
typedef char *_wsa5__Action;
#endif

#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (86)
typedef ULONG64 _wsa5__RetryAfter;
#endif

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (87)
typedef char *_wsa5__ProblemHeaderQName;
#endif

#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (88)
typedef char *_wsa5__ProblemIRI;
#endif

#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (89)
typedef struct wsa5__ProblemActionType _wsa5__ProblemAction;
#endif

#ifndef SOAP_TYPE_xsd__NMTOKEN
#define SOAP_TYPE_xsd__NMTOKEN (96)
typedef std::string xsd__NMTOKEN;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (98)
typedef std::string xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (99)
typedef std::string xsd__nonNegativeInteger;
#endif

#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (100)
typedef std::string xsd__positiveInteger;
#endif

#ifndef SOAP_TYPE_ns3__QNameListType
#define SOAP_TYPE_ns3__QNameListType (185)
typedef std::string ns3__QNameListType;
#endif

#ifndef SOAP_TYPE_ns3__URIListType
#define SOAP_TYPE_ns3__URIListType (186)
typedef std::string ns3__URIListType;
#endif

#ifndef SOAP_TYPE_ns3__CoordinatesType
#define SOAP_TYPE_ns3__CoordinatesType (187)
typedef std::string ns3__CoordinatesType;
#endif

#ifndef SOAP_TYPE_ns3__NonEmptyStringType
#define SOAP_TYPE_ns3__NonEmptyStringType (237)
typedef std::string ns3__NonEmptyStringType;
#endif

#ifndef SOAP_TYPE_ns3__MimeType
#define SOAP_TYPE_ns3__MimeType (238)
typedef std::string ns3__MimeType;
#endif

#ifndef SOAP_TYPE_ns3__GuidType
#define SOAP_TYPE_ns3__GuidType (239)
typedef std::string ns3__GuidType;
#endif

#ifndef SOAP_TYPE_ns3__VersionType
#define SOAP_TYPE_ns3__VersionType (241)
typedef std::string ns3__VersionType;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
