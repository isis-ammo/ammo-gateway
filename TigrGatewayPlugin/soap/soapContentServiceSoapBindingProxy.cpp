/* soapContentServiceSoapBindingProxy.cpp
   Generated by gSOAP 2.7.17 from ContentService.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapContentServiceSoapBindingProxy.h"

ContentServiceSoapBindingProxy::ContentServiceSoapBindingProxy()
{	ContentServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ContentServiceSoapBindingProxy::ContentServiceSoapBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

ContentServiceSoapBindingProxy::ContentServiceSoapBindingProxy(soap_mode iomode)
{	ContentServiceSoapBindingProxy_init(iomode, iomode);
}

ContentServiceSoapBindingProxy::ContentServiceSoapBindingProxy(soap_mode imode, soap_mode omode)
{	ContentServiceSoapBindingProxy_init(imode, omode);
}

void ContentServiceSoapBindingProxy::ContentServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"ns4", "http://www.ascendintel.com/tigr/v2/cs/soap", NULL, NULL},
	{"ns3", "http://www.ascendintel.com/tigr/v2", NULL, NULL},
	{"ns2", "http://www.ascendintel.com/tigr/v2/cs/types", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
}

ContentServiceSoapBindingProxy::~ContentServiceSoapBindingProxy()
{ }

void ContentServiceSoapBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ContentServiceSoapBindingProxy::soap_noheader()
{	header = NULL;
}

void ContentServiceSoapBindingProxy::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action)
{	::soap_header(this);
	this->header->wsse__Security = wsse__Security;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
}

const SOAP_ENV__Header *ContentServiceSoapBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *ContentServiceSoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *ContentServiceSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ContentServiceSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ContentServiceSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

void ContentServiceSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void ContentServiceSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *ContentServiceSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ContentServiceSoapBindingProxy::CreateOperation(ns2__CreateType *ns2__Create, ns2__CreateResponseType *ns2__CreateResponse)
{	struct soap *soap = this;
	struct __ns4__CreateOperation soap_tmp___ns4__CreateOperation;
	const char *soap_action = NULL;
	soap_action = "http://www.ascendintel.com/tigr/v2/cs#Create";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__CreateOperation.ns2__Create = ns2__Create;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__CreateOperation(soap, &soap_tmp___ns4__CreateOperation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__CreateOperation(soap, &soap_tmp___ns4__CreateOperation, "-ns4:CreateOperation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__CreateOperation(soap, &soap_tmp___ns4__CreateOperation, "-ns4:CreateOperation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateResponse)
		return soap_closesock(soap);
	ns2__CreateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateResponse->soap_get(soap, "ns2:CreateResponse", "ns2:CreateResponseType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ContentServiceSoapBindingProxy::GetOperation(ns2__GetType *ns2__Get, ns2__GetResponseType *ns2__GetResponse)
{	struct soap *soap = this;
	struct __ns4__GetOperation soap_tmp___ns4__GetOperation;
	const char *soap_action = NULL;
	soap_action = "http://www.ascendintel.com/tigr/v2/cs#Get";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__GetOperation.ns2__Get = ns2__Get;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__GetOperation(soap, &soap_tmp___ns4__GetOperation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetOperation(soap, &soap_tmp___ns4__GetOperation, "-ns4:GetOperation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetOperation(soap, &soap_tmp___ns4__GetOperation, "-ns4:GetOperation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GetResponse)
		return soap_closesock(soap);
	ns2__GetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GetResponse->soap_get(soap, "ns2:GetResponse", "ns2:GetResponseType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ContentServiceSoapBindingProxy::DeleteOperation(ns2__DeleteType *ns2__Delete, struct __ns4__DeleteOperationResponse &_param_1)
{	struct soap *soap = this;
	struct __ns4__DeleteOperation soap_tmp___ns4__DeleteOperation;
	const char *soap_action = NULL;
	soap_action = "http://www.ascendintel.com/tigr/v2/cs#Delete";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__DeleteOperation.ns2__Delete = ns2__Delete;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__DeleteOperation(soap, &soap_tmp___ns4__DeleteOperation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__DeleteOperation(soap, &soap_tmp___ns4__DeleteOperation, "-ns4:DeleteOperation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__DeleteOperation(soap, &soap_tmp___ns4__DeleteOperation, "-ns4:DeleteOperation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default___ns4__DeleteOperationResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns4__DeleteOperationResponse(soap, &_param_1, "-ns4:DeleteOperationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ContentServiceSoapBindingProxy::UpdateOperation(ns2__UpdateType *ns2__Update, struct __ns4__UpdateOperationResponse &_param_2)
{	struct soap *soap = this;
	struct __ns4__UpdateOperation soap_tmp___ns4__UpdateOperation;
	const char *soap_action = NULL;
	soap_action = "http://www.ascendintel.com/tigr/v2/cs#Update";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__UpdateOperation.ns2__Update = ns2__Update;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__UpdateOperation(soap, &soap_tmp___ns4__UpdateOperation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__UpdateOperation(soap, &soap_tmp___ns4__UpdateOperation, "-ns4:UpdateOperation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__UpdateOperation(soap, &soap_tmp___ns4__UpdateOperation, "-ns4:UpdateOperation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_2)
		return soap_closesock(soap);
	soap_default___ns4__UpdateOperationResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns4__UpdateOperationResponse(soap, &_param_2, "-ns4:UpdateOperationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ContentServiceSoapBindingProxy::GetCapabilitiesOperation(ns3__GetCapabilitiesType *ns3__GetCapabilities, ns2__ContentServiceCapabilitiesType *ns2__ContentServiceCapabilities)
{	struct soap *soap = this;
	struct __ns4__GetCapabilitiesOperation soap_tmp___ns4__GetCapabilitiesOperation;
	const char *soap_action = NULL;
	soap_action = "http://www.ascendintel.com/tigr/v2/cs#GetCapabilities";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__GetCapabilitiesOperation.ns3__GetCapabilities = ns3__GetCapabilities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__GetCapabilitiesOperation(soap, &soap_tmp___ns4__GetCapabilitiesOperation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetCapabilitiesOperation(soap, &soap_tmp___ns4__GetCapabilitiesOperation, "-ns4:GetCapabilitiesOperation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetCapabilitiesOperation(soap, &soap_tmp___ns4__GetCapabilitiesOperation, "-ns4:GetCapabilitiesOperation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ContentServiceCapabilities)
		return soap_closesock(soap);
	ns2__ContentServiceCapabilities->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ContentServiceCapabilities->soap_get(soap, "ns2:ContentServiceCapabilities", "ns2:ContentServiceCapabilitiesType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
