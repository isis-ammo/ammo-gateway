/* soapH.h
   Generated by gSOAP 2.7.17 from ../pass.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

#define soap_write_time(soap, data) ( soap_begin_send(soap) || soap_put_time(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef SOAP_TYPE__pass__create_USCOREtopic_publish_USCOREmode
#define SOAP_TYPE__pass__create_USCOREtopic_publish_USCOREmode (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__pass__create_USCOREtopic_publish_USCOREmode(struct soap*, enum _pass__create_USCOREtopic_publish_USCOREmode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__create_USCOREtopic_publish_USCOREmode(struct soap*, const char*, int, const enum _pass__create_USCOREtopic_publish_USCOREmode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__pass__create_USCOREtopic_publish_USCOREmode2s(struct soap*, enum _pass__create_USCOREtopic_publish_USCOREmode);
SOAP_FMAC3 enum _pass__create_USCOREtopic_publish_USCOREmode * SOAP_FMAC4 soap_in__pass__create_USCOREtopic_publish_USCOREmode(struct soap*, const char*, enum _pass__create_USCOREtopic_publish_USCOREmode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_pass__create_USCOREtopic_publish_USCOREmode(struct soap*, const char*, enum _pass__create_USCOREtopic_publish_USCOREmode *);

#define soap_write__pass__create_USCOREtopic_publish_USCOREmode(soap, data) ( soap_begin_send(soap) || soap_put__pass__create_USCOREtopic_publish_USCOREmode(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__pass__create_USCOREtopic_publish_USCOREmode(struct soap*, const enum _pass__create_USCOREtopic_publish_USCOREmode *, const char*, const char*);

#define soap_read__pass__create_USCOREtopic_publish_USCOREmode(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__create_USCOREtopic_publish_USCOREmode(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _pass__create_USCOREtopic_publish_USCOREmode * SOAP_FMAC4 soap_get__pass__create_USCOREtopic_publish_USCOREmode(struct soap*, enum _pass__create_USCOREtopic_publish_USCOREmode *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE__pass__item_USCOREdata_item_USCOREdata_USCOREclassification
#define SOAP_TYPE__pass__item_USCOREdata_item_USCOREdata_USCOREclassification (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, const char*, int, const enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__pass__item_USCOREdata_item_USCOREdata_USCOREclassification2s(struct soap*, enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification);
SOAP_FMAC3 enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification * SOAP_FMAC4 soap_in__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, const char*, enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, const char*, enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *);

#define soap_write__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(soap, data) ( soap_begin_send(soap) || soap_put__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, const enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *, const char*, const char*);

#define soap_read__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification * SOAP_FMAC4 soap_get__pass__item_USCOREdata_item_USCOREdata_USCOREclassification(struct soap*, enum _pass__item_USCOREdata_item_USCOREdata_USCOREclassification *, const char*, const char*);

#ifndef SOAP_TYPE__pass__status_status_USCOREcode
#define SOAP_TYPE__pass__status_status_USCOREcode (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__pass__status_status_USCOREcode(struct soap*, enum _pass__status_status_USCOREcode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__status_status_USCOREcode(struct soap*, const char*, int, const enum _pass__status_status_USCOREcode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__pass__status_status_USCOREcode2s(struct soap*, enum _pass__status_status_USCOREcode);
SOAP_FMAC3 enum _pass__status_status_USCOREcode * SOAP_FMAC4 soap_in__pass__status_status_USCOREcode(struct soap*, const char*, enum _pass__status_status_USCOREcode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_pass__status_status_USCOREcode(struct soap*, const char*, enum _pass__status_status_USCOREcode *);

#define soap_write__pass__status_status_USCOREcode(soap, data) ( soap_begin_send(soap) || soap_put__pass__status_status_USCOREcode(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__pass__status_status_USCOREcode(struct soap*, const enum _pass__status_status_USCOREcode *, const char*, const char*);

#define soap_read__pass__status_status_USCOREcode(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__status_status_USCOREcode(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _pass__status_status_USCOREcode * SOAP_FMAC4 soap_get__pass__status_status_USCOREcode(struct soap*, enum _pass__status_status_USCOREcode *, const char*, const char*);

#ifndef SOAP_TYPE__pass__status_command
#define SOAP_TYPE__pass__status_command (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__pass__status_command(struct soap*, enum _pass__status_command *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__status_command(struct soap*, const char*, int, const enum _pass__status_command *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__pass__status_command2s(struct soap*, enum _pass__status_command);
SOAP_FMAC3 enum _pass__status_command * SOAP_FMAC4 soap_in__pass__status_command(struct soap*, const char*, enum _pass__status_command *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_pass__status_command(struct soap*, const char*, enum _pass__status_command *);

#define soap_write__pass__status_command(soap, data) ( soap_begin_send(soap) || soap_put__pass__status_command(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__pass__status_command(struct soap*, const enum _pass__status_command *, const char*, const char*);

#define soap_read__pass__status_command(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__status_command(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _pass__status_command * SOAP_FMAC4 soap_get__pass__status_command(struct soap*, enum _pass__status_command *, const char*, const char*);

#ifndef SOAP_TYPE__xlink__actuate
#define SOAP_TYPE__xlink__actuate (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__actuate(struct soap*, enum _xlink__actuate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__actuate(struct soap*, const char*, int, const enum _xlink__actuate *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__actuate2s(struct soap*, enum _xlink__actuate);
SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_in__xlink__actuate(struct soap*, const char*, enum _xlink__actuate *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__actuate(struct soap*, const char*, enum _xlink__actuate *);

#define soap_write__xlink__actuate(soap, data) ( soap_begin_send(soap) || soap_put__xlink__actuate(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__actuate(struct soap*, const enum _xlink__actuate *, const char*, const char*);

#define soap_read__xlink__actuate(soap, data) ( soap_begin_recv(soap) || !soap_get__xlink__actuate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_get__xlink__actuate(struct soap*, enum _xlink__actuate *, const char*, const char*);

#ifndef SOAP_TYPE__xlink__show
#define SOAP_TYPE__xlink__show (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__show(struct soap*, enum _xlink__show *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__show(struct soap*, const char*, int, const enum _xlink__show *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__show2s(struct soap*, enum _xlink__show);
SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_in__xlink__show(struct soap*, const char*, enum _xlink__show *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__show(struct soap*, const char*, enum _xlink__show *);

#define soap_write__xlink__show(soap, data) ( soap_begin_send(soap) || soap_put__xlink__show(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__show(struct soap*, const enum _xlink__show *, const char*, const char*);

#define soap_read__xlink__show(soap, data) ( soap_begin_recv(soap) || !soap_get__xlink__show(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_get__xlink__show(struct soap*, enum _xlink__show *, const char*, const char*);

#ifndef SOAP_TYPE__pass__References_ReferenceObj
#define SOAP_TYPE__pass__References_ReferenceObj (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__References_ReferenceObj(struct soap*, const char*, int, const _pass__References_ReferenceObj *, const char*);
SOAP_FMAC3 _pass__References_ReferenceObj * SOAP_FMAC4 soap_in__pass__References_ReferenceObj(struct soap*, const char*, _pass__References_ReferenceObj *, const char*);

#define soap_write__pass__References_ReferenceObj(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__References_ReferenceObj(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__References_ReferenceObj(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__References_ReferenceObj * SOAP_FMAC4 soap_get__pass__References_ReferenceObj(struct soap*, _pass__References_ReferenceObj *, const char*, const char*);

#define soap_new__pass__References_ReferenceObj(soap, n) soap_instantiate__pass__References_ReferenceObj(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__References_ReferenceObj(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__References_ReferenceObj * SOAP_FMAC2 soap_instantiate__pass__References_ReferenceObj(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__References_ReferenceObj(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_pass__item_USCORETTL
#define SOAP_TYPE_pass__item_USCORETTL (34)
#endif

#define soap_default_pass__item_USCORETTL(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_pass__item_USCORETTL(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__item_USCORETTL(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_pass__item_USCORETTL(struct soap*, const char*, std::string*, const char*);

#define soap_write_pass__item_USCORETTL(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_pass__item_USCORETTL(struct soap*, const std::string *, const char*, const char*);

#define soap_read_pass__item_USCORETTL(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__item_USCORETTL(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_pass__item_USCORETTL(struct soap*, std::string *, const char*, const char*);

#define soap_new_pass__item_USCORETTL(soap, n) soap_instantiate_pass__item_USCORETTL(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__item_USCORETTL(soap, p) soap_delete(soap, p)


#define soap_instantiate_pass__item_USCORETTL soap_instantiate_std__string


#define soap_copy_pass__item_USCORETTL soap_copy_std__string

#ifndef SOAP_TYPE_pass__longitude
#define SOAP_TYPE_pass__longitude (33)
#endif

#define soap_default_pass__longitude(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_pass__longitude(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__longitude(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_pass__longitude(struct soap*, const char*, std::string*, const char*);

#define soap_write_pass__longitude(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_pass__longitude(struct soap*, const std::string *, const char*, const char*);

#define soap_read_pass__longitude(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__longitude(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_pass__longitude(struct soap*, std::string *, const char*, const char*);

#define soap_new_pass__longitude(soap, n) soap_instantiate_pass__longitude(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__longitude(soap, p) soap_delete(soap, p)


#define soap_instantiate_pass__longitude soap_instantiate_std__string


#define soap_copy_pass__longitude soap_copy_std__string

#ifndef SOAP_TYPE_pass__latitude
#define SOAP_TYPE_pass__latitude (32)
#endif

#define soap_default_pass__latitude(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_pass__latitude(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__latitude(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_pass__latitude(struct soap*, const char*, std::string*, const char*);

#define soap_write_pass__latitude(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_pass__latitude(struct soap*, const std::string *, const char*, const char*);

#define soap_read_pass__latitude(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__latitude(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_pass__latitude(struct soap*, std::string *, const char*, const char*);

#define soap_new_pass__latitude(soap, n) soap_instantiate_pass__latitude(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__latitude(soap, p) soap_delete(soap, p)


#define soap_instantiate_pass__latitude soap_instantiate_std__string


#define soap_copy_pass__latitude soap_copy_std__string

#ifndef SOAP_TYPE__pass__create_USCOREtopic
#define SOAP_TYPE__pass__create_USCOREtopic (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__create_USCOREtopic(struct soap*, const char*, int, const _pass__create_USCOREtopic *, const char*);
SOAP_FMAC3 _pass__create_USCOREtopic * SOAP_FMAC4 soap_in__pass__create_USCOREtopic(struct soap*, const char*, _pass__create_USCOREtopic *, const char*);

#define soap_write__pass__create_USCOREtopic(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__create_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__create_USCOREtopic * SOAP_FMAC4 soap_get__pass__create_USCOREtopic(struct soap*, _pass__create_USCOREtopic *, const char*, const char*);

#define soap_new__pass__create_USCOREtopic(soap, n) soap_instantiate__pass__create_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__create_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__create_USCOREtopic * SOAP_FMAC2 soap_instantiate__pass__create_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__create_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__sync_USCOREresponse
#define SOAP_TYPE__pass__sync_USCOREresponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__sync_USCOREresponse(struct soap*, const char*, int, const _pass__sync_USCOREresponse *, const char*);
SOAP_FMAC3 _pass__sync_USCOREresponse * SOAP_FMAC4 soap_in__pass__sync_USCOREresponse(struct soap*, const char*, _pass__sync_USCOREresponse *, const char*);

#define soap_write__pass__sync_USCOREresponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__sync_USCOREresponse(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__sync_USCOREresponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__sync_USCOREresponse * SOAP_FMAC4 soap_get__pass__sync_USCOREresponse(struct soap*, _pass__sync_USCOREresponse *, const char*, const char*);

#define soap_new__pass__sync_USCOREresponse(soap, n) soap_instantiate__pass__sync_USCOREresponse(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__sync_USCOREresponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__sync_USCOREresponse * SOAP_FMAC2 soap_instantiate__pass__sync_USCOREresponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__sync_USCOREresponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__sync
#define SOAP_TYPE__pass__sync (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__sync(struct soap*, const char*, int, const _pass__sync *, const char*);
SOAP_FMAC3 _pass__sync * SOAP_FMAC4 soap_in__pass__sync(struct soap*, const char*, _pass__sync *, const char*);

#define soap_write__pass__sync(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__sync(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__sync(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__sync * SOAP_FMAC4 soap_get__pass__sync(struct soap*, _pass__sync *, const char*, const char*);

#define soap_new__pass__sync(soap, n) soap_instantiate__pass__sync(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__sync(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__sync * SOAP_FMAC2 soap_instantiate__pass__sync(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__sync(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__subscribe
#define SOAP_TYPE__pass__subscribe (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__subscribe(struct soap*, const char*, int, const _pass__subscribe *, const char*);
SOAP_FMAC3 _pass__subscribe * SOAP_FMAC4 soap_in__pass__subscribe(struct soap*, const char*, _pass__subscribe *, const char*);

#define soap_write__pass__subscribe(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__subscribe(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__subscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__subscribe * SOAP_FMAC4 soap_get__pass__subscribe(struct soap*, _pass__subscribe *, const char*, const char*);

#define soap_new__pass__subscribe(soap, n) soap_instantiate__pass__subscribe(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__subscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__subscribe * SOAP_FMAC2 soap_instantiate__pass__subscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__subscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__unsubscribe
#define SOAP_TYPE__pass__unsubscribe (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__unsubscribe(struct soap*, const char*, int, const _pass__unsubscribe *, const char*);
SOAP_FMAC3 _pass__unsubscribe * SOAP_FMAC4 soap_in__pass__unsubscribe(struct soap*, const char*, _pass__unsubscribe *, const char*);

#define soap_write__pass__unsubscribe(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__unsubscribe(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__unsubscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__unsubscribe * SOAP_FMAC4 soap_get__pass__unsubscribe(struct soap*, _pass__unsubscribe *, const char*, const char*);

#define soap_new__pass__unsubscribe(soap, n) soap_instantiate__pass__unsubscribe(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__unsubscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__unsubscribe * SOAP_FMAC2 soap_instantiate__pass__unsubscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__unsubscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__retract_USCOREtopic
#define SOAP_TYPE__pass__retract_USCOREtopic (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__retract_USCOREtopic(struct soap*, const char*, int, const _pass__retract_USCOREtopic *, const char*);
SOAP_FMAC3 _pass__retract_USCOREtopic * SOAP_FMAC4 soap_in__pass__retract_USCOREtopic(struct soap*, const char*, _pass__retract_USCOREtopic *, const char*);

#define soap_write__pass__retract_USCOREtopic(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__retract_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__retract_USCOREtopic * SOAP_FMAC4 soap_get__pass__retract_USCOREtopic(struct soap*, _pass__retract_USCOREtopic *, const char*, const char*);

#define soap_new__pass__retract_USCOREtopic(soap, n) soap_instantiate__pass__retract_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__retract_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__retract_USCOREtopic * SOAP_FMAC2 soap_instantiate__pass__retract_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__retract_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__retract_USCOREitem
#define SOAP_TYPE__pass__retract_USCOREitem (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__retract_USCOREitem(struct soap*, const char*, int, const _pass__retract_USCOREitem *, const char*);
SOAP_FMAC3 _pass__retract_USCOREitem * SOAP_FMAC4 soap_in__pass__retract_USCOREitem(struct soap*, const char*, _pass__retract_USCOREitem *, const char*);

#define soap_write__pass__retract_USCOREitem(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__retract_USCOREitem(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__retract_USCOREitem * SOAP_FMAC4 soap_get__pass__retract_USCOREitem(struct soap*, _pass__retract_USCOREitem *, const char*, const char*);

#define soap_new__pass__retract_USCOREitem(soap, n) soap_instantiate__pass__retract_USCOREitem(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__retract_USCOREitem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__retract_USCOREitem * SOAP_FMAC2 soap_instantiate__pass__retract_USCOREitem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__retract_USCOREitem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__publish
#define SOAP_TYPE__pass__publish (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__publish(struct soap*, const char*, int, const _pass__publish *, const char*);
SOAP_FMAC3 _pass__publish * SOAP_FMAC4 soap_in__pass__publish(struct soap*, const char*, _pass__publish *, const char*);

#define soap_write__pass__publish(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__publish(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__publish(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__publish * SOAP_FMAC4 soap_get__pass__publish(struct soap*, _pass__publish *, const char*, const char*);

#define soap_new__pass__publish(soap, n) soap_instantiate__pass__publish(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__publish(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__publish * SOAP_FMAC2 soap_instantiate__pass__publish(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__publish(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__References
#define SOAP_TYPE__pass__References (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__References(struct soap*, const char*, int, const _pass__References *, const char*);
SOAP_FMAC3 _pass__References * SOAP_FMAC4 soap_in__pass__References(struct soap*, const char*, _pass__References *, const char*);

#define soap_write__pass__References(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__References(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__References(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__References * SOAP_FMAC4 soap_get__pass__References(struct soap*, _pass__References *, const char*, const char*);

#define soap_new__pass__References(soap, n) soap_instantiate__pass__References(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__References(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__References * SOAP_FMAC2 soap_instantiate__pass__References(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__References(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__AOI_USCORErectangle
#define SOAP_TYPE__pass__AOI_USCORErectangle (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__AOI_USCORErectangle(struct soap*, const char*, int, const _pass__AOI_USCORErectangle *, const char*);
SOAP_FMAC3 _pass__AOI_USCORErectangle * SOAP_FMAC4 soap_in__pass__AOI_USCORErectangle(struct soap*, const char*, _pass__AOI_USCORErectangle *, const char*);

#define soap_write__pass__AOI_USCORErectangle(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__pass__AOI_USCORErectangle(soap, data) ( soap_begin_recv(soap) || !soap_get__pass__AOI_USCORErectangle(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__AOI_USCORErectangle * SOAP_FMAC4 soap_get__pass__AOI_USCORErectangle(struct soap*, _pass__AOI_USCORErectangle *, const char*, const char*);

#define soap_new__pass__AOI_USCORErectangle(soap, n) soap_instantiate__pass__AOI_USCORErectangle(soap, n, NULL, NULL, NULL)


#define soap_delete__pass__AOI_USCORErectangle(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _pass__AOI_USCORErectangle * SOAP_FMAC2 soap_instantiate__pass__AOI_USCORErectangle(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__pass__AOI_USCORErectangle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_pass__item_USCOREdata
#define SOAP_TYPE_pass__item_USCOREdata (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__item_USCOREdata(struct soap*, const char*, int, const pass__item_USCOREdata *, const char*);
SOAP_FMAC3 pass__item_USCOREdata * SOAP_FMAC4 soap_in_pass__item_USCOREdata(struct soap*, const char*, pass__item_USCOREdata *, const char*);

#define soap_write_pass__item_USCOREdata(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_pass__item_USCOREdata(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__item_USCOREdata(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__item_USCOREdata * SOAP_FMAC4 soap_get_pass__item_USCOREdata(struct soap*, pass__item_USCOREdata *, const char*, const char*);

#define soap_new_pass__item_USCOREdata(soap, n) soap_instantiate_pass__item_USCOREdata(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__item_USCOREdata(soap, p) soap_delete(soap, p)

SOAP_FMAC1 pass__item_USCOREdata * SOAP_FMAC2 soap_instantiate_pass__item_USCOREdata(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_pass__item_USCOREdata(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_pass__item
#define SOAP_TYPE_pass__item (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__item(struct soap*, const char*, int, const pass__item *, const char*);
SOAP_FMAC3 pass__item * SOAP_FMAC4 soap_in_pass__item(struct soap*, const char*, pass__item *, const char*);

#define soap_write_pass__item(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_pass__item(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__item(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__item * SOAP_FMAC4 soap_get_pass__item(struct soap*, pass__item *, const char*, const char*);

#define soap_new_pass__item(soap, n) soap_instantiate_pass__item(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__item(soap, p) soap_delete(soap, p)

SOAP_FMAC1 pass__item * SOAP_FMAC2 soap_instantiate_pass__item(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_pass__item(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_pass__pass_USCOREfault
#define SOAP_TYPE_pass__pass_USCOREfault (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__pass_USCOREfault(struct soap*, const char*, int, const pass__pass_USCOREfault *, const char*);
SOAP_FMAC3 pass__pass_USCOREfault * SOAP_FMAC4 soap_in_pass__pass_USCOREfault(struct soap*, const char*, pass__pass_USCOREfault *, const char*);

#define soap_write_pass__pass_USCOREfault(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_pass__pass_USCOREfault(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__pass_USCOREfault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__pass_USCOREfault * SOAP_FMAC4 soap_get_pass__pass_USCOREfault(struct soap*, pass__pass_USCOREfault *, const char*, const char*);

#define soap_new_pass__pass_USCOREfault(soap, n) soap_instantiate_pass__pass_USCOREfault(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__pass_USCOREfault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 pass__pass_USCOREfault * SOAP_FMAC2 soap_instantiate_pass__pass_USCOREfault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_pass__pass_USCOREfault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_pass__status
#define SOAP_TYPE_pass__status (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_pass__status(struct soap*, const char*, int, const pass__status *, const char*);
SOAP_FMAC3 pass__status * SOAP_FMAC4 soap_in_pass__status(struct soap*, const char*, pass__status *, const char*);

#define soap_write_pass__status(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_pass__status(soap, data) ( soap_begin_recv(soap) || !soap_get_pass__status(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__status * SOAP_FMAC4 soap_get_pass__status(struct soap*, pass__status *, const char*, const char*);

#define soap_new_pass__status(soap, n) soap_instantiate_pass__status(soap, n, NULL, NULL, NULL)


#define soap_delete_pass__status(soap, p) soap_delete(soap, p)

SOAP_FMAC1 pass__status * SOAP_FMAC2 soap_instantiate_pass__status(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_pass__status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (17)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__nonNegativeInteger(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__nonNegativeInteger(soap, n) soap_instantiate_xsd__nonNegativeInteger(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__nonNegativeInteger(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__nonNegativeInteger soap_instantiate_std__string


#define soap_copy_xsd__nonNegativeInteger soap_copy_std__string

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (16)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__integer(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__integer(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__integer(soap, n) soap_instantiate_xsd__integer(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__integer(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__integer soap_instantiate_std__string


#define soap_copy_xsd__integer soap_copy_std__string

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (15)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__decimal(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__decimal(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__decimal(soap, n) soap_instantiate_xsd__decimal(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__decimal(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__decimal soap_instantiate_std__string


#define soap_copy_xsd__decimal soap_copy_std__string

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (14)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__anyURI(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__anyURI(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__anyURI(soap, n) soap_instantiate_xsd__anyURI(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyURI(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_copy_xsd__anyURI soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns2__unsubscribe
#define SOAP_TYPE___ns2__unsubscribe (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__unsubscribe(struct soap*, struct __ns2__unsubscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__unsubscribe(struct soap*, const struct __ns2__unsubscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__unsubscribe(struct soap*, const char*, int, const struct __ns2__unsubscribe *, const char*);
SOAP_FMAC3 struct __ns2__unsubscribe * SOAP_FMAC4 soap_in___ns2__unsubscribe(struct soap*, const char*, struct __ns2__unsubscribe *, const char*);

#define soap_write___ns2__unsubscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__unsubscribe(soap, data), 0) || soap_put___ns2__unsubscribe(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__unsubscribe(struct soap*, const struct __ns2__unsubscribe *, const char*, const char*);

#define soap_read___ns2__unsubscribe(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__unsubscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns2__unsubscribe * SOAP_FMAC4 soap_get___ns2__unsubscribe(struct soap*, struct __ns2__unsubscribe *, const char*, const char*);

#define soap_new___ns2__unsubscribe(soap, n) soap_instantiate___ns2__unsubscribe(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__unsubscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__unsubscribe * SOAP_FMAC2 soap_instantiate___ns2__unsubscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__unsubscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__retract_USCOREtopic
#define SOAP_TYPE___ns2__retract_USCOREtopic (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__retract_USCOREtopic(struct soap*, struct __ns2__retract_USCOREtopic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__retract_USCOREtopic(struct soap*, const struct __ns2__retract_USCOREtopic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__retract_USCOREtopic(struct soap*, const char*, int, const struct __ns2__retract_USCOREtopic *, const char*);
SOAP_FMAC3 struct __ns2__retract_USCOREtopic * SOAP_FMAC4 soap_in___ns2__retract_USCOREtopic(struct soap*, const char*, struct __ns2__retract_USCOREtopic *, const char*);

#define soap_write___ns2__retract_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__retract_USCOREtopic(soap, data), 0) || soap_put___ns2__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__retract_USCOREtopic(struct soap*, const struct __ns2__retract_USCOREtopic *, const char*, const char*);

#define soap_read___ns2__retract_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns2__retract_USCOREtopic * SOAP_FMAC4 soap_get___ns2__retract_USCOREtopic(struct soap*, struct __ns2__retract_USCOREtopic *, const char*, const char*);

#define soap_new___ns2__retract_USCOREtopic(soap, n) soap_instantiate___ns2__retract_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__retract_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__retract_USCOREtopic * SOAP_FMAC2 soap_instantiate___ns2__retract_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__retract_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__retract_USCOREitem
#define SOAP_TYPE___ns2__retract_USCOREitem (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__retract_USCOREitem(struct soap*, struct __ns2__retract_USCOREitem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__retract_USCOREitem(struct soap*, const struct __ns2__retract_USCOREitem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__retract_USCOREitem(struct soap*, const char*, int, const struct __ns2__retract_USCOREitem *, const char*);
SOAP_FMAC3 struct __ns2__retract_USCOREitem * SOAP_FMAC4 soap_in___ns2__retract_USCOREitem(struct soap*, const char*, struct __ns2__retract_USCOREitem *, const char*);

#define soap_write___ns2__retract_USCOREitem(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__retract_USCOREitem(soap, data), 0) || soap_put___ns2__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__retract_USCOREitem(struct soap*, const struct __ns2__retract_USCOREitem *, const char*, const char*);

#define soap_read___ns2__retract_USCOREitem(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns2__retract_USCOREitem * SOAP_FMAC4 soap_get___ns2__retract_USCOREitem(struct soap*, struct __ns2__retract_USCOREitem *, const char*, const char*);

#define soap_new___ns2__retract_USCOREitem(soap, n) soap_instantiate___ns2__retract_USCOREitem(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__retract_USCOREitem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__retract_USCOREitem * SOAP_FMAC2 soap_instantiate___ns2__retract_USCOREitem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__retract_USCOREitem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__publish
#define SOAP_TYPE___ns2__publish (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__publish(struct soap*, struct __ns2__publish *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__publish(struct soap*, const struct __ns2__publish *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__publish(struct soap*, const char*, int, const struct __ns2__publish *, const char*);
SOAP_FMAC3 struct __ns2__publish * SOAP_FMAC4 soap_in___ns2__publish(struct soap*, const char*, struct __ns2__publish *, const char*);

#define soap_write___ns2__publish(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__publish(soap, data), 0) || soap_put___ns2__publish(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__publish(struct soap*, const struct __ns2__publish *, const char*, const char*);

#define soap_read___ns2__publish(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__publish(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns2__publish * SOAP_FMAC4 soap_get___ns2__publish(struct soap*, struct __ns2__publish *, const char*, const char*);

#define soap_new___ns2__publish(soap, n) soap_instantiate___ns2__publish(soap, n, NULL, NULL, NULL)


#define soap_delete___ns2__publish(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns2__publish * SOAP_FMAC2 soap_instantiate___ns2__publish(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__publish(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sync
#define SOAP_TYPE___ns1__sync (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sync(struct soap*, struct __ns1__sync *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sync(struct soap*, const struct __ns1__sync *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sync(struct soap*, const char*, int, const struct __ns1__sync *, const char*);
SOAP_FMAC3 struct __ns1__sync * SOAP_FMAC4 soap_in___ns1__sync(struct soap*, const char*, struct __ns1__sync *, const char*);

#define soap_write___ns1__sync(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__sync(soap, data), 0) || soap_put___ns1__sync(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sync(struct soap*, const struct __ns1__sync *, const char*, const char*);

#define soap_read___ns1__sync(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sync(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__sync * SOAP_FMAC4 soap_get___ns1__sync(struct soap*, struct __ns1__sync *, const char*, const char*);

#define soap_new___ns1__sync(soap, n) soap_instantiate___ns1__sync(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__sync(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__sync * SOAP_FMAC2 soap_instantiate___ns1__sync(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sync(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__create_USCOREtopic
#define SOAP_TYPE___ns1__create_USCOREtopic (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__create_USCOREtopic(struct soap*, struct __ns1__create_USCOREtopic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__create_USCOREtopic(struct soap*, const struct __ns1__create_USCOREtopic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__create_USCOREtopic(struct soap*, const char*, int, const struct __ns1__create_USCOREtopic *, const char*);
SOAP_FMAC3 struct __ns1__create_USCOREtopic * SOAP_FMAC4 soap_in___ns1__create_USCOREtopic(struct soap*, const char*, struct __ns1__create_USCOREtopic *, const char*);

#define soap_write___ns1__create_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__create_USCOREtopic(soap, data), 0) || soap_put___ns1__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__create_USCOREtopic(struct soap*, const struct __ns1__create_USCOREtopic *, const char*, const char*);

#define soap_read___ns1__create_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__create_USCOREtopic * SOAP_FMAC4 soap_get___ns1__create_USCOREtopic(struct soap*, struct __ns1__create_USCOREtopic *, const char*, const char*);

#define soap_new___ns1__create_USCOREtopic(soap, n) soap_instantiate___ns1__create_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__create_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__create_USCOREtopic * SOAP_FMAC2 soap_instantiate___ns1__create_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__create_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__publish
#define SOAP_TYPE___ns1__publish (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__publish(struct soap*, struct __ns1__publish *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__publish(struct soap*, const struct __ns1__publish *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__publish(struct soap*, const char*, int, const struct __ns1__publish *, const char*);
SOAP_FMAC3 struct __ns1__publish * SOAP_FMAC4 soap_in___ns1__publish(struct soap*, const char*, struct __ns1__publish *, const char*);

#define soap_write___ns1__publish(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__publish(soap, data), 0) || soap_put___ns1__publish(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__publish(struct soap*, const struct __ns1__publish *, const char*, const char*);

#define soap_read___ns1__publish(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__publish(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__publish * SOAP_FMAC4 soap_get___ns1__publish(struct soap*, struct __ns1__publish *, const char*, const char*);

#define soap_new___ns1__publish(soap, n) soap_instantiate___ns1__publish(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__publish(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__publish * SOAP_FMAC2 soap_instantiate___ns1__publish(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__publish(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__unsubscribe
#define SOAP_TYPE___ns1__unsubscribe (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__unsubscribe(struct soap*, struct __ns1__unsubscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__unsubscribe(struct soap*, const struct __ns1__unsubscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__unsubscribe(struct soap*, const char*, int, const struct __ns1__unsubscribe *, const char*);
SOAP_FMAC3 struct __ns1__unsubscribe * SOAP_FMAC4 soap_in___ns1__unsubscribe(struct soap*, const char*, struct __ns1__unsubscribe *, const char*);

#define soap_write___ns1__unsubscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__unsubscribe(soap, data), 0) || soap_put___ns1__unsubscribe(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__unsubscribe(struct soap*, const struct __ns1__unsubscribe *, const char*, const char*);

#define soap_read___ns1__unsubscribe(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__unsubscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__unsubscribe * SOAP_FMAC4 soap_get___ns1__unsubscribe(struct soap*, struct __ns1__unsubscribe *, const char*, const char*);

#define soap_new___ns1__unsubscribe(soap, n) soap_instantiate___ns1__unsubscribe(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__unsubscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__unsubscribe * SOAP_FMAC2 soap_instantiate___ns1__unsubscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__unsubscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__retract_USCOREtopic
#define SOAP_TYPE___ns1__retract_USCOREtopic (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__retract_USCOREtopic(struct soap*, struct __ns1__retract_USCOREtopic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__retract_USCOREtopic(struct soap*, const struct __ns1__retract_USCOREtopic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__retract_USCOREtopic(struct soap*, const char*, int, const struct __ns1__retract_USCOREtopic *, const char*);
SOAP_FMAC3 struct __ns1__retract_USCOREtopic * SOAP_FMAC4 soap_in___ns1__retract_USCOREtopic(struct soap*, const char*, struct __ns1__retract_USCOREtopic *, const char*);

#define soap_write___ns1__retract_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__retract_USCOREtopic(soap, data), 0) || soap_put___ns1__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__retract_USCOREtopic(struct soap*, const struct __ns1__retract_USCOREtopic *, const char*, const char*);

#define soap_read___ns1__retract_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__retract_USCOREtopic * SOAP_FMAC4 soap_get___ns1__retract_USCOREtopic(struct soap*, struct __ns1__retract_USCOREtopic *, const char*, const char*);

#define soap_new___ns1__retract_USCOREtopic(soap, n) soap_instantiate___ns1__retract_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__retract_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__retract_USCOREtopic * SOAP_FMAC2 soap_instantiate___ns1__retract_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__retract_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__retract_USCOREitem
#define SOAP_TYPE___ns1__retract_USCOREitem (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__retract_USCOREitem(struct soap*, struct __ns1__retract_USCOREitem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__retract_USCOREitem(struct soap*, const struct __ns1__retract_USCOREitem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__retract_USCOREitem(struct soap*, const char*, int, const struct __ns1__retract_USCOREitem *, const char*);
SOAP_FMAC3 struct __ns1__retract_USCOREitem * SOAP_FMAC4 soap_in___ns1__retract_USCOREitem(struct soap*, const char*, struct __ns1__retract_USCOREitem *, const char*);

#define soap_write___ns1__retract_USCOREitem(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__retract_USCOREitem(soap, data), 0) || soap_put___ns1__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__retract_USCOREitem(struct soap*, const struct __ns1__retract_USCOREitem *, const char*, const char*);

#define soap_read___ns1__retract_USCOREitem(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__retract_USCOREitem * SOAP_FMAC4 soap_get___ns1__retract_USCOREitem(struct soap*, struct __ns1__retract_USCOREitem *, const char*, const char*);

#define soap_new___ns1__retract_USCOREitem(soap, n) soap_instantiate___ns1__retract_USCOREitem(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__retract_USCOREitem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__retract_USCOREitem * SOAP_FMAC2 soap_instantiate___ns1__retract_USCOREitem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__retract_USCOREitem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__subscribe
#define SOAP_TYPE___ns1__subscribe (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__subscribe(struct soap*, struct __ns1__subscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__subscribe(struct soap*, const struct __ns1__subscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__subscribe(struct soap*, const char*, int, const struct __ns1__subscribe *, const char*);
SOAP_FMAC3 struct __ns1__subscribe * SOAP_FMAC4 soap_in___ns1__subscribe(struct soap*, const char*, struct __ns1__subscribe *, const char*);

#define soap_write___ns1__subscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__subscribe(soap, data), 0) || soap_put___ns1__subscribe(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__subscribe(struct soap*, const struct __ns1__subscribe *, const char*, const char*);

#define soap_read___ns1__subscribe(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__subscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__subscribe * SOAP_FMAC4 soap_get___ns1__subscribe(struct soap*, struct __ns1__subscribe *, const char*, const char*);

#define soap_new___ns1__subscribe(soap, n) soap_instantiate___ns1__subscribe(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__subscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__subscribe * SOAP_FMAC2 soap_instantiate___ns1__subscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__subscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_xsd__anyAttribute
#define SOAP_TYPE_xsd__anyAttribute (11)
#endif
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__anyAttribute(struct soap*, struct soap_dom_attribute *);
SOAP_FMAC1 void SOAP_FMAC2 soap_serialize_xsd__anyAttribute(struct soap*, const struct soap_dom_attribute *);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__anyAttribute(struct soap*, const char*, int, const struct soap_dom_attribute *, const char*);
SOAP_FMAC1 struct soap_dom_attribute * SOAP_FMAC2 soap_in_xsd__anyAttribute(struct soap*, const char*, struct soap_dom_attribute *, const char*);

#define soap_write_xsd__anyAttribute(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__anyAttribute(soap, data), 0) || soap_put_xsd__anyAttribute(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyAttribute(struct soap*, const struct soap_dom_attribute *, const char*, const char*);

#define soap_read_xsd__anyAttribute(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyAttribute(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct soap_dom_attribute * SOAP_FMAC4 soap_get_xsd__anyAttribute(struct soap*, struct soap_dom_attribute *, const char*, const char*);

#define soap_new_xsd__anyAttribute(soap, n) soap_instantiate_xsd__anyAttribute(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyAttribute(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct soap_dom_attribute * SOAP_FMAC2 soap_instantiate_xsd__anyAttribute(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyAttribute(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (9)
#endif
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__anyType(struct soap*, struct soap_dom_element *);
SOAP_FMAC1 void SOAP_FMAC2 soap_serialize_xsd__anyType(struct soap*, const struct soap_dom_element *);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__anyType(struct soap*, const char*, int, const struct soap_dom_element *, const char*);
SOAP_FMAC1 struct soap_dom_element * SOAP_FMAC2 soap_in_xsd__anyType(struct soap*, const char*, struct soap_dom_element *, const char*);

#define soap_write_xsd__anyType(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__anyType(soap, data), 0) || soap_put_xsd__anyType(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyType(struct soap*, const struct soap_dom_element *, const char*, const char*);

#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct soap_dom_element * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, struct soap_dom_element *, const char*, const char*);

#define soap_new_xsd__anyType(soap, n) soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct soap_dom_element * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__pass__union_sync_USCOREresponse
#define SOAP_TYPE__pass__union_sync_USCOREresponse (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__pass__union_sync_USCOREresponse(struct soap*, int, const union _pass__union_sync_USCOREresponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__pass__union_sync_USCOREresponse(struct soap*, int, const union _pass__union_sync_USCOREresponse *);
SOAP_FMAC3 union _pass__union_sync_USCOREresponse * SOAP_FMAC4 soap_in__pass__union_sync_USCOREresponse(struct soap*, int*, union _pass__union_sync_USCOREresponse *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_pass__sync_USCOREresponse
#define SOAP_TYPE_PointerTo_pass__sync_USCOREresponse (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__sync_USCOREresponse(struct soap*, _pass__sync_USCOREresponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__sync_USCOREresponse(struct soap*, const char *, int, _pass__sync_USCOREresponse *const*, const char *);
SOAP_FMAC3 _pass__sync_USCOREresponse ** SOAP_FMAC4 soap_in_PointerTo_pass__sync_USCOREresponse(struct soap*, const char*, _pass__sync_USCOREresponse **, const char*);

#define soap_write_PointerTo_pass__sync_USCOREresponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__sync_USCOREresponse(soap, data), 0) || soap_put_PointerTo_pass__sync_USCOREresponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__sync_USCOREresponse(struct soap*, _pass__sync_USCOREresponse *const*, const char*, const char*);

#define soap_read_PointerTo_pass__sync_USCOREresponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__sync_USCOREresponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__sync_USCOREresponse ** SOAP_FMAC4 soap_get_PointerTo_pass__sync_USCOREresponse(struct soap*, _pass__sync_USCOREresponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__sync
#define SOAP_TYPE_PointerTo_pass__sync (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__sync(struct soap*, _pass__sync *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__sync(struct soap*, const char *, int, _pass__sync *const*, const char *);
SOAP_FMAC3 _pass__sync ** SOAP_FMAC4 soap_in_PointerTo_pass__sync(struct soap*, const char*, _pass__sync **, const char*);

#define soap_write_PointerTo_pass__sync(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__sync(soap, data), 0) || soap_put_PointerTo_pass__sync(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__sync(struct soap*, _pass__sync *const*, const char*, const char*);

#define soap_read_PointerTo_pass__sync(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__sync(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__sync ** SOAP_FMAC4 soap_get_PointerTo_pass__sync(struct soap*, _pass__sync **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__unsubscribe
#define SOAP_TYPE_PointerTo_pass__unsubscribe (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__unsubscribe(struct soap*, _pass__unsubscribe *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__unsubscribe(struct soap*, const char *, int, _pass__unsubscribe *const*, const char *);
SOAP_FMAC3 _pass__unsubscribe ** SOAP_FMAC4 soap_in_PointerTo_pass__unsubscribe(struct soap*, const char*, _pass__unsubscribe **, const char*);

#define soap_write_PointerTo_pass__unsubscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__unsubscribe(soap, data), 0) || soap_put_PointerTo_pass__unsubscribe(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__unsubscribe(struct soap*, _pass__unsubscribe *const*, const char*, const char*);

#define soap_read_PointerTo_pass__unsubscribe(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__unsubscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__unsubscribe ** SOAP_FMAC4 soap_get_PointerTo_pass__unsubscribe(struct soap*, _pass__unsubscribe **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__retract_USCOREtopic
#define SOAP_TYPE_PointerTo_pass__retract_USCOREtopic (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__retract_USCOREtopic(struct soap*, _pass__retract_USCOREtopic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__retract_USCOREtopic(struct soap*, const char *, int, _pass__retract_USCOREtopic *const*, const char *);
SOAP_FMAC3 _pass__retract_USCOREtopic ** SOAP_FMAC4 soap_in_PointerTo_pass__retract_USCOREtopic(struct soap*, const char*, _pass__retract_USCOREtopic **, const char*);

#define soap_write_PointerTo_pass__retract_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__retract_USCOREtopic(soap, data), 0) || soap_put_PointerTo_pass__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__retract_USCOREtopic(struct soap*, _pass__retract_USCOREtopic *const*, const char*, const char*);

#define soap_read_PointerTo_pass__retract_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__retract_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__retract_USCOREtopic ** SOAP_FMAC4 soap_get_PointerTo_pass__retract_USCOREtopic(struct soap*, _pass__retract_USCOREtopic **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__retract_USCOREitem
#define SOAP_TYPE_PointerTo_pass__retract_USCOREitem (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__retract_USCOREitem(struct soap*, _pass__retract_USCOREitem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__retract_USCOREitem(struct soap*, const char *, int, _pass__retract_USCOREitem *const*, const char *);
SOAP_FMAC3 _pass__retract_USCOREitem ** SOAP_FMAC4 soap_in_PointerTo_pass__retract_USCOREitem(struct soap*, const char*, _pass__retract_USCOREitem **, const char*);

#define soap_write_PointerTo_pass__retract_USCOREitem(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__retract_USCOREitem(soap, data), 0) || soap_put_PointerTo_pass__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__retract_USCOREitem(struct soap*, _pass__retract_USCOREitem *const*, const char*, const char*);

#define soap_read_PointerTo_pass__retract_USCOREitem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__retract_USCOREitem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__retract_USCOREitem ** SOAP_FMAC4 soap_get_PointerTo_pass__retract_USCOREitem(struct soap*, _pass__retract_USCOREitem **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTopass__pass_USCOREfault
#define SOAP_TYPE_PointerTopass__pass_USCOREfault (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopass__pass_USCOREfault(struct soap*, pass__pass_USCOREfault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopass__pass_USCOREfault(struct soap*, const char *, int, pass__pass_USCOREfault *const*, const char *);
SOAP_FMAC3 pass__pass_USCOREfault ** SOAP_FMAC4 soap_in_PointerTopass__pass_USCOREfault(struct soap*, const char*, pass__pass_USCOREfault **, const char*);

#define soap_write_PointerTopass__pass_USCOREfault(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTopass__pass_USCOREfault(soap, data), 0) || soap_put_PointerTopass__pass_USCOREfault(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopass__pass_USCOREfault(struct soap*, pass__pass_USCOREfault *const*, const char*, const char*);

#define soap_read_PointerTopass__pass_USCOREfault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTopass__pass_USCOREfault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__pass_USCOREfault ** SOAP_FMAC4 soap_get_PointerTopass__pass_USCOREfault(struct soap*, pass__pass_USCOREfault **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, std::vector<_pass__subscribe * >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, const char *, int, std::vector<_pass__subscribe * >*const*, const char *);
SOAP_FMAC3 std::vector<_pass__subscribe * >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, const char*, std::vector<_pass__subscribe * >**, const char*);

#define soap_write_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, std::vector<_pass__subscribe * >*const*, const char*, const char*);

#define soap_read_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::vector<_pass__subscribe * >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, std::vector<_pass__subscribe * >**, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__subscribe
#define SOAP_TYPE_PointerTo_pass__subscribe (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__subscribe(struct soap*, _pass__subscribe *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__subscribe(struct soap*, const char *, int, _pass__subscribe *const*, const char *);
SOAP_FMAC3 _pass__subscribe ** SOAP_FMAC4 soap_in_PointerTo_pass__subscribe(struct soap*, const char*, _pass__subscribe **, const char*);

#define soap_write_PointerTo_pass__subscribe(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__subscribe(soap, data), 0) || soap_put_PointerTo_pass__subscribe(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__subscribe(struct soap*, _pass__subscribe *const*, const char*, const char*);

#define soap_read_PointerTo_pass__subscribe(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__subscribe(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__subscribe ** SOAP_FMAC4 soap_get_PointerTo_pass__subscribe(struct soap*, _pass__subscribe **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, std::vector<_pass__create_USCOREtopic * >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, const char *, int, std::vector<_pass__create_USCOREtopic * >*const*, const char *);
SOAP_FMAC3 std::vector<_pass__create_USCOREtopic * >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, const char*, std::vector<_pass__create_USCOREtopic * >**, const char*);

#define soap_write_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, std::vector<_pass__create_USCOREtopic * >*const*, const char*, const char*);

#define soap_read_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::vector<_pass__create_USCOREtopic * >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, std::vector<_pass__create_USCOREtopic * >**, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__create_USCOREtopic
#define SOAP_TYPE_PointerTo_pass__create_USCOREtopic (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__create_USCOREtopic(struct soap*, _pass__create_USCOREtopic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__create_USCOREtopic(struct soap*, const char *, int, _pass__create_USCOREtopic *const*, const char *);
SOAP_FMAC3 _pass__create_USCOREtopic ** SOAP_FMAC4 soap_in_PointerTo_pass__create_USCOREtopic(struct soap*, const char*, _pass__create_USCOREtopic **, const char*);

#define soap_write_PointerTo_pass__create_USCOREtopic(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__create_USCOREtopic(soap, data), 0) || soap_put_PointerTo_pass__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__create_USCOREtopic(struct soap*, _pass__create_USCOREtopic *const*, const char*, const char*);

#define soap_read_PointerTo_pass__create_USCOREtopic(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__create_USCOREtopic(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__create_USCOREtopic ** SOAP_FMAC4 soap_get_PointerTo_pass__create_USCOREtopic(struct soap*, _pass__create_USCOREtopic **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__publish
#define SOAP_TYPE_PointerTo_pass__publish (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__publish(struct soap*, _pass__publish *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__publish(struct soap*, const char *, int, _pass__publish *const*, const char *);
SOAP_FMAC3 _pass__publish ** SOAP_FMAC4 soap_in_PointerTo_pass__publish(struct soap*, const char*, _pass__publish **, const char*);

#define soap_write_PointerTo_pass__publish(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__publish(soap, data), 0) || soap_put_PointerTo_pass__publish(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__publish(struct soap*, _pass__publish *const*, const char*, const char*);

#define soap_read_PointerTo_pass__publish(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__publish(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__publish ** SOAP_FMAC4 soap_get_PointerTo_pass__publish(struct soap*, _pass__publish **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxsd__nonNegativeInteger
#define SOAP_TYPE_PointerToxsd__nonNegativeInteger (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerToxsd__nonNegativeInteger(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxsd__nonNegativeInteger(soap, data), 0) || soap_put_PointerToxsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerToxsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTopass__item
#define SOAP_TYPE_PointerTopass__item (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopass__item(struct soap*, pass__item *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopass__item(struct soap*, const char *, int, pass__item *const*, const char *);
SOAP_FMAC3 pass__item ** SOAP_FMAC4 soap_in_PointerTopass__item(struct soap*, const char*, pass__item **, const char*);

#define soap_write_PointerTopass__item(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTopass__item(soap, data), 0) || soap_put_PointerTopass__item(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopass__item(struct soap*, pass__item *const*, const char*, const char*);

#define soap_read_PointerTopass__item(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTopass__item(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__item ** SOAP_FMAC4 soap_get_PointerTopass__item(struct soap*, pass__item **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__References_ReferenceObj
#define SOAP_TYPE_PointerTo_pass__References_ReferenceObj (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__References_ReferenceObj(struct soap*, _pass__References_ReferenceObj *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__References_ReferenceObj(struct soap*, const char *, int, _pass__References_ReferenceObj *const*, const char *);
SOAP_FMAC3 _pass__References_ReferenceObj ** SOAP_FMAC4 soap_in_PointerTo_pass__References_ReferenceObj(struct soap*, const char*, _pass__References_ReferenceObj **, const char*);

#define soap_write_PointerTo_pass__References_ReferenceObj(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__References_ReferenceObj(soap, data), 0) || soap_put_PointerTo_pass__References_ReferenceObj(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__References_ReferenceObj(struct soap*, _pass__References_ReferenceObj *const*, const char*, const char*);

#define soap_read_PointerTo_pass__References_ReferenceObj(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__References_ReferenceObj(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__References_ReferenceObj ** SOAP_FMAC4 soap_get_PointerTo_pass__References_ReferenceObj(struct soap*, _pass__References_ReferenceObj **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_xlink__actuate
#define SOAP_TYPE_PointerTo_xlink__actuate (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__actuate(struct soap*, const char *, int, enum _xlink__actuate *const*, const char *);
SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_in_PointerTo_xlink__actuate(struct soap*, const char*, enum _xlink__actuate **, const char*);

#define soap_write_PointerTo_xlink__actuate(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_xlink__actuate(soap, data), 0) || soap_put_PointerTo_xlink__actuate(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*, const char*, const char*);

#define soap_read_PointerTo_xlink__actuate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_xlink__actuate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_get_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_xlink__show
#define SOAP_TYPE_PointerTo_xlink__show (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__show(struct soap*, const char *, int, enum _xlink__show *const*, const char *);
SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_in_PointerTo_xlink__show(struct soap*, const char*, enum _xlink__show **, const char*);

#define soap_write_PointerTo_xlink__show(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_xlink__show(soap, data), 0) || soap_put_PointerTo_xlink__show(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*, const char*, const char*);

#define soap_read_PointerTo_xlink__show(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_xlink__show(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_get_PointerTo_xlink__show(struct soap*, enum _xlink__show **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxsd__anyURI
#define SOAP_TYPE_PointerToxsd__anyURI (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerToxsd__anyURI(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyURI(soap, data), 0) || soap_put_PointerToxsd__anyURI(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerToxsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTotime
#define SOAP_TYPE_PointerTotime (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTotime(struct soap*, const char*, time_t **, const char*);

#define soap_write_PointerTotime(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTotime(soap, data), 0) || soap_put_PointerTotime(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotime(struct soap*, time_t *const*, const char*, const char*);

#define soap_read_PointerTotime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotime(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTotime(struct soap*, time_t **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__References
#define SOAP_TYPE_PointerTo_pass__References (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__References(struct soap*, _pass__References *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__References(struct soap*, const char *, int, _pass__References *const*, const char *);
SOAP_FMAC3 _pass__References ** SOAP_FMAC4 soap_in_PointerTo_pass__References(struct soap*, const char*, _pass__References **, const char*);

#define soap_write_PointerTo_pass__References(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__References(soap, data), 0) || soap_put_PointerTo_pass__References(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__References(struct soap*, _pass__References *const*, const char*, const char*);

#define soap_read_PointerTo_pass__References(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__References(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__References ** SOAP_FMAC4 soap_get_PointerTo_pass__References(struct soap*, _pass__References **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTopass__item_USCOREdata
#define SOAP_TYPE_PointerTopass__item_USCOREdata (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopass__item_USCOREdata(struct soap*, pass__item_USCOREdata *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopass__item_USCOREdata(struct soap*, const char *, int, pass__item_USCOREdata *const*, const char *);
SOAP_FMAC3 pass__item_USCOREdata ** SOAP_FMAC4 soap_in_PointerTopass__item_USCOREdata(struct soap*, const char*, pass__item_USCOREdata **, const char*);

#define soap_write_PointerTopass__item_USCOREdata(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTopass__item_USCOREdata(soap, data), 0) || soap_put_PointerTopass__item_USCOREdata(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopass__item_USCOREdata(struct soap*, pass__item_USCOREdata *const*, const char*, const char*);

#define soap_read_PointerTopass__item_USCOREdata(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTopass__item_USCOREdata(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__item_USCOREdata ** SOAP_FMAC4 soap_get_PointerTopass__item_USCOREdata(struct soap*, pass__item_USCOREdata **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_pass__AOI_USCORErectangle
#define SOAP_TYPE_PointerTo_pass__AOI_USCORErectangle (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_pass__AOI_USCORErectangle(struct soap*, _pass__AOI_USCORErectangle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_pass__AOI_USCORErectangle(struct soap*, const char *, int, _pass__AOI_USCORErectangle *const*, const char *);
SOAP_FMAC3 _pass__AOI_USCORErectangle ** SOAP_FMAC4 soap_in_PointerTo_pass__AOI_USCORErectangle(struct soap*, const char*, _pass__AOI_USCORErectangle **, const char*);

#define soap_write_PointerTo_pass__AOI_USCORErectangle(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_pass__AOI_USCORErectangle(soap, data), 0) || soap_put_PointerTo_pass__AOI_USCORErectangle(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_pass__AOI_USCORErectangle(struct soap*, _pass__AOI_USCORErectangle *const*, const char*, const char*);

#define soap_read_PointerTo_pass__AOI_USCORErectangle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_pass__AOI_USCORErectangle(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _pass__AOI_USCORErectangle ** SOAP_FMAC4 soap_get_PointerTo_pass__AOI_USCORErectangle(struct soap*, _pass__AOI_USCORErectangle **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTopass__status
#define SOAP_TYPE_PointerTopass__status (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopass__status(struct soap*, pass__status *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopass__status(struct soap*, const char *, int, pass__status *const*, const char *);
SOAP_FMAC3 pass__status ** SOAP_FMAC4 soap_in_PointerTopass__status(struct soap*, const char*, pass__status **, const char*);

#define soap_write_PointerTopass__status(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTopass__status(soap, data), 0) || soap_put_PointerTopass__status(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopass__status(struct soap*, pass__status *const*, const char*, const char*);

#define soap_read_PointerTopass__status(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTopass__status(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 pass__status ** SOAP_FMAC4 soap_get_PointerTopass__status(struct soap*, pass__status **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTo_pass__subscribe
#define SOAP_TYPE_std__vectorTemplateOfPointerTo_pass__subscribe (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, std::vector<_pass__subscribe * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, const std::vector<_pass__subscribe * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, const char*, int, const std::vector<_pass__subscribe * >*, const char*);
SOAP_FMAC3 std::vector<_pass__subscribe * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, const char*, std::vector<_pass__subscribe * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTo_pass__subscribe(soap, n) soap_instantiate_std__vectorTemplateOfPointerTo_pass__subscribe(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTo_pass__subscribe(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<_pass__subscribe * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTo_pass__subscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic
#define SOAP_TYPE_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, std::vector<_pass__create_USCOREtopic * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, const std::vector<_pass__create_USCOREtopic * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, const char*, int, const std::vector<_pass__create_USCOREtopic * >*, const char*);
SOAP_FMAC3 std::vector<_pass__create_USCOREtopic * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, const char*, std::vector<_pass__create_USCOREtopic * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, n) soap_instantiate_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<_pass__create_USCOREtopic * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTo_pass__create_USCOREtopic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);

#define soap_new_std__vectorTemplateOfstd__string(soap, n) soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfstd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTopass__item
#define SOAP_TYPE_std__vectorTemplateOfPointerTopass__item (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTopass__item(struct soap*, std::vector<pass__item * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTopass__item(struct soap*, const std::vector<pass__item * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTopass__item(struct soap*, const char*, int, const std::vector<pass__item * >*, const char*);
SOAP_FMAC3 std::vector<pass__item * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTopass__item(struct soap*, const char*, std::vector<pass__item * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTopass__item(soap, n) soap_instantiate_std__vectorTemplateOfPointerTopass__item(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTopass__item(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<pass__item * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTopass__item(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTopass__item(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
